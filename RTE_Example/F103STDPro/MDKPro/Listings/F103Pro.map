Component: ARM Compiler 5.06 update 6 (build 750) Tool: armlink [4d35ed]

==============================================================================

Section Cross References

    main.o(i.LEDTimer_Callback) refers to bsp_led.o(i.BSP_LED_Toggle) for BSP_LED_Toggle
    main.o(i.SystemThread) refers to app_f1.o(i.APP_RunEnvInit) for APP_RunEnvInit
    main.o(i.SystemThread) refers to bsp_led.o(i.BSP_LED_Init) for BSP_LED_Init
    main.o(i.SystemThread) refers to bsp_comf1.o(i.BSP_USART_Init) for BSP_USART_Init
    main.o(i.SystemThread) refers to app_softtimer.o(i.APP_SoftTimer_Resume) for APP_SoftTimer_Resume
    main.o(i.SystemThread) refers to app_softtimer.o(i.APP_SoftTimer_Create) for APP_SoftTimer_Create
    main.o(i.SystemThread) refers to app_softtimer.o(i.APP_SoftTimer_TickHanlder) for APP_SoftTimer_TickHanlder
    main.o(i.SystemThread) refers to rtx_delay.o(.text.osDelay) for osDelay
    main.o(i.SystemThread) refers to main.o(i.LEDTimer_Callback) for LEDTimer_Callback
    main.o(i.main) refers to system_stm32f10x.o(i.SystemCoreClockUpdate) for SystemCoreClockUpdate
    main.o(i.main) refers to rtx_kernel.o(.text.osKernelInitialize) for osKernelInitialize
    main.o(i.main) refers to rtx_thread.o(.text.osThreadNew) for osThreadNew
    main.o(i.main) refers to rtx_kernel.o(.text.osKernelStart) for osKernelStart
    main.o(i.main) refers to main.o(.constdata) for .constdata
    main.o(i.main) refers to main.o(i.SystemThread) for SystemThread
    app_f1.o(i.APP_Assert) refers to printf6.o(i.__0printf$6) for __2printf
    app_f1.o(i.APP_RunEnvInit) refers to app_bget.o(i.APP_BGet_Init) for APP_BGet_Init
    app_f1.o(i.APP_RunEnvInit) refers to app_debug.o(i.APP_Debug_Init) for APP_Debug_Init
    app_f1.o(i.APP_RunEnvInit) refers to app_softtimer.o(i.APP_SoftTimer_Init) for APP_SoftTimer_Init
    app_f1.o(i.APP_RunEnvInit) refers to app_softtimer.o(i.APP_SoftTimer_Create) for APP_SoftTimer_Create
    app_f1.o(i.APP_RunEnvInit) refers to app_f1.o(i.SysTimer_Callback) for SysTimer_Callback
    app_f1.o(i.SysTimer_Callback) refers to app_debug.o(i.APP_Debug_Poll) for APP_Debug_Poll
    app_f1.o(i.fputc) refers to bsp_comf1.o(i.BSP_USART_Putc) for BSP_USART_Putc
    app_softtimer.o(i.APP_SoftTimer_AutoReloadCommand) refers to app_softtimer.o(.bss) for .bss
    app_softtimer.o(i.APP_SoftTimer_AutoReloadValue) refers to app_softtimer.o(.bss) for .bss
    app_softtimer.o(i.APP_SoftTimer_Create) refers to app_softtimer.o(.bss) for .bss
    app_softtimer.o(i.APP_SoftTimer_DelayMS) refers to rtx_kernel.o(.text.osKernelGetState) for osKernelGetState
    app_softtimer.o(i.APP_SoftTimer_DelayMS) refers to system_stm32f10x.o(.data) for SystemCoreClock
    app_softtimer.o(i.APP_SoftTimer_DelayMS) refers to app_softtimer.o(.data) for .data
    app_softtimer.o(i.APP_SoftTimer_Delete) refers to app_softtimer.o(.bss) for .bss
    app_softtimer.o(i.APP_SoftTimer_GetHandler) refers to app_softtimer.o(.bss) for .bss
    app_softtimer.o(i.APP_SoftTimer_GetTick) refers to rtx_kernel.o(.text.osKernelGetState) for osKernelGetState
    app_softtimer.o(i.APP_SoftTimer_GetTick) refers to app_softtimer.o(.data) for .data
    app_softtimer.o(i.APP_SoftTimer_GetTick) refers to system_stm32f10x.o(.data) for SystemCoreClock
    app_softtimer.o(i.APP_SoftTimer_Pause) refers to app_softtimer.o(.bss) for .bss
    app_softtimer.o(i.APP_SoftTimer_Reset) refers to app_softtimer.o(.bss) for .bss
    app_softtimer.o(i.APP_SoftTimer_Resume) refers to app_softtimer.o(.bss) for .bss
    app_softtimer.o(i.APP_SoftTimer_TickHanlder) refers to app_softtimer.o(.data) for .data
    app_softtimer.o(i.APP_SoftTimer_TickHanlder) refers to app_softtimer.o(.bss) for .bss
    app_bget.o(i.APP_BGet) refers to app_f1.o(i.APP_Assert) for APP_Assert
    app_bget.o(i.APP_BGet) refers to app_bget.o(.data) for .data
    app_bget.o(i.APP_BGet_AllocSize) refers to app_bget.o(.data) for .data
    app_bget.o(i.APP_BGet_Init) refers to app_f1.o(i.APP_Assert) for APP_Assert
    app_bget.o(i.APP_BGet_Init) refers to app_bget.o(.data) for .data
    app_bget.o(i.APP_BGet_Init) refers to app_bget.o(i.bpool) for i.bpool
    app_bget.o(i.APP_BGet_TotalSize) refers to app_bget.o(.data) for .data
    app_bget.o(i.APP_BGetr) refers to app_bget.o(i.APP_BGet) for APP_BGet
    app_bget.o(i.APP_BGetr) refers to app_f1.o(i.APP_Assert) for APP_Assert
    app_bget.o(i.APP_BGetr) refers to memcpya.o(.text) for __aeabi_memcpy
    app_bget.o(i.APP_BGetr) refers to app_bget.o(i.APP_BRel) for APP_BRel
    app_bget.o(i.APP_BGetz) refers to app_bget.o(i.APP_BGet) for APP_BGet
    app_bget.o(i.APP_BGetz) refers to app_f1.o(i.APP_Assert) for APP_Assert
    app_bget.o(i.APP_BGetz) refers to memseta.o(.text) for __aeabi_memclr
    app_bget.o(i.APP_BRel) refers to app_f1.o(i.APP_Assert) for APP_Assert
    app_bget.o(i.APP_BRel) refers to app_bget.o(.data) for .data
    app_bget.o(i.bpool) refers to app_f1.o(i.APP_Assert) for APP_Assert
    app_bget.o(i.bpool) refers to app_bget.o(.data) for .data
    app_bget.o(.data) refers to app_bget.o(.bss) for RAM_0
    app_ringbuffer.o(i.APP_MessageQuene_In) refers to memcpya.o(.text) for __aeabi_memcpy
    app_ringbuffer.o(i.APP_MessageQuene_Init) refers to app_bget.o(i.APP_BGetz) for APP_BGetz
    app_ringbuffer.o(i.APP_MessageQuene_Out) refers to memcpya.o(.text) for __aeabi_memcpy
    app_ringbuffer.o(i.APP_RingBuffer_Insert) refers to memcpya.o(.text) for __aeabi_memcpy
    app_ringbuffer.o(i.APP_RingBuffer_InsertMult) refers to memcpya.o(.text) for __aeabi_memcpy
    app_ringbuffer.o(i.APP_RingBuffer_Pop) refers to memcpya.o(.text) for __aeabi_memcpy
    app_ringbuffer.o(i.APP_RingBuffer_PopMult) refers to memcpya.o(.text) for __aeabi_memcpy
    app_string.o(i.ulocaltime) refers to app_string.o(.constdata) for .constdata
    app_string.o(i.umktime) refers to app_string.o(i.ulocaltime) for ulocaltime
    app_string.o(i.umktime) refers to app_string.o(.constdata) for .constdata
    app_string.o(i.uposofseg) refers to strstr.o(.text) for strstr
    app_string.o(i.urand) refers to app_string.o(.data) for .data
    app_string.o(i.usnprintf) refers to app_string.o(i.uvsnprintf) for uvsnprintf
    app_string.o(i.usprintf) refers to app_string.o(i.uvsnprintf) for uvsnprintf
    app_string.o(i.usrand) refers to app_string.o(.data) for .data
    app_string.o(i.ustrlen) refers to app_f1.o(i.APP_Assert) for APP_Assert
    app_string.o(i.ustrncpy) refers to app_f1.o(i.APP_Assert) for APP_Assert
    app_string.o(i.ustrstr) refers to app_f1.o(i.APP_Assert) for APP_Assert
    app_string.o(i.ustrstr) refers to app_string.o(i.ustrlen) for i.ustrlen
    app_string.o(i.ustrtof) refers to app_f1.o(i.APP_Assert) for APP_Assert
    app_string.o(i.ustrtof) refers to fmul.o(.text) for __aeabi_fmul
    app_string.o(i.ustrtof) refers to fflti.o(.text) for __aeabi_i2f
    app_string.o(i.ustrtof) refers to fadd.o(.text) for __aeabi_fadd
    app_string.o(i.ustrtof) refers to fdiv.o(.text) for __aeabi_fdiv
    app_string.o(i.ustrtof) refers to app_string.o(.constdata) for .constdata
    app_string.o(i.ustrtoul) refers to app_f1.o(i.APP_Assert) for APP_Assert
    app_string.o(i.uvsnprintf) refers to app_f1.o(i.APP_Assert) for APP_Assert
    app_string.o(i.uvsnprintf) refers to app_string.o(i.ustrncpy) for ustrncpy
    app_string.o(i.uvsnprintf) refers to app_string.o(.constdata) for .constdata
    app_string.o(.constdata) refers to app_string.o(.conststring) for .conststring
    app_statemachine.o(i.StateMachine_Delete) refers to app_bget.o(i.APP_BRel) for APP_BRel
    app_statemachine.o(i.StateMachine_Init) refers to app_bget.o(i.APP_BGetz) for APP_BGetz
    app_debug.o(i.APP_Debug_Init) refers to app_bget.o(i.APP_BGetz) for APP_BGetz
    app_debug.o(i.APP_Debug_Init) refers to app_f1.o(i.APP_Assert) for APP_Assert
    app_debug.o(i.APP_Debug_Init) refers to app_debug.o(.data) for .data
    app_debug.o(i.APP_Debug_Poll) refers to bsp_comf1.o(i.BSP_USART_ReturnQue) for BSP_USART_ReturnQue
    app_debug.o(i.APP_Debug_Poll) refers to app_ringbuffer.o(i.APP_MessageQuene_Out) for APP_MessageQuene_Out
    app_debug.o(i.APP_Debug_Poll) refers to app_cmdline.o(i.CmdLineProcess) for CmdLineProcess
    app_debug.o(i.APP_Debug_Poll) refers to printf6.o(i.__0printf$6) for __2printf
    app_debug.o(i.APP_Debug_Poll) refers to memseta.o(.text) for __aeabi_memclr
    app_debug.o(i.APP_Debug_Poll) refers to app_debug.o(.data) for .data
    app_debug.o(i.CMD_MEMInfor) refers to app_bget.o(i.APP_BGet_AllocSize) for APP_BGet_AllocSize
    app_debug.o(i.CMD_MEMInfor) refers to app_bget.o(i.APP_BGet_TotalSize) for APP_BGet_TotalSize
    app_debug.o(i.CMD_MEMInfor) refers to printf6.o(i.__0printf$6) for __2printf
    app_debug.o(i.CMD_help) refers to printf6.o(i.__0printf$6) for __2printf
    app_debug.o(i.CMD_help) refers to app_debug.o(.data) for .data
    app_debug.o(.data) refers to app_debug.o(.conststring) for .conststring
    app_debug.o(.data) refers to app_debug.o(i.CMD_help) for CMD_help
    app_debug.o(.data) refers to app_debug.o(i.CMD_MEMInfor) for CMD_MEMInfor
    app_cmdline.o(i.CmdLineProcess) refers to strcmp.o(.text) for strcmp
    app_cmdline.o(i.CmdLineProcess) refers to app_cmdline.o(.bss) for .bss
    app_cmdline.o(i.CmdLineProcess) refers to app_debug.o(.data) for g_psCmdTable
    bsp_led.o(i.BSP_LED_Init) refers to stm32f10x_rcc.o(i.RCC_APB2PeriphClockCmd) for RCC_APB2PeriphClockCmd
    bsp_led.o(i.BSP_LED_Init) refers to stm32f10x_gpio.o(i.GPIO_Init) for GPIO_Init
    bsp_led.o(i.BSP_LED_Init) refers to stm32f10x_gpio.o(i.GPIO_ResetBits) for GPIO_ResetBits
    bsp_led.o(i.BSP_LED_Init) refers to stm32f10x_gpio.o(i.GPIO_SetBits) for GPIO_SetBits
    bsp_led.o(i.BSP_LED_Init) refers to bsp_led.o(.data) for .data
    bsp_led.o(i.BSP_LED_Off) refers to stm32f10x_gpio.o(i.GPIO_SetBits) for GPIO_SetBits
    bsp_led.o(i.BSP_LED_Off) refers to bsp_led.o(.data) for .data
    bsp_led.o(i.BSP_LED_On) refers to stm32f10x_gpio.o(i.GPIO_ResetBits) for GPIO_ResetBits
    bsp_led.o(i.BSP_LED_On) refers to bsp_led.o(.data) for .data
    bsp_led.o(i.BSP_LED_Toggle) refers to bsp_led.o(.data) for .data
    bsp_key.o(i.BSP_KEY_Get) refers to bsp_key.o(.bss) for .bss
    bsp_key.o(i.BSP_KEY_Init) refers to stm32f10x_rcc.o(i.RCC_APB2PeriphClockCmd) for RCC_APB2PeriphClockCmd
    bsp_key.o(i.BSP_KEY_Init) refers to stm32f10x_gpio.o(i.GPIO_Init) for GPIO_Init
    bsp_key.o(i.BSP_KEY_Init) refers to app_f1.o(i.APP_Assert) for APP_Assert
    bsp_key.o(i.BSP_KEY_Init) refers to bsp_key.o(.bss) for .bss
    bsp_key.o(i.BSP_KEY_Init) refers to bsp_key.o(.data) for .data
    bsp_key.o(i.BSP_KEY_InitvaluePool) refers to bsp_key.o(.bss) for .bss
    bsp_key.o(i.BSP_KEY_Poll) refers to stm32f10x_gpio.o(i.GPIO_ReadInputDataBit) for GPIO_ReadInputDataBit
    bsp_key.o(i.BSP_KEY_Poll) refers to bsp_key.o(.bss) for .bss
    bsp_key.o(i.BSP_KEY_Poll) refers to bsp_key.o(.data) for .data
    bsp_comf1.o(i.BSP_DMA_Init) refers to stm32f10x_rcc.o(i.RCC_AHBPeriphClockCmd) for RCC_AHBPeriphClockCmd
    bsp_comf1.o(i.BSP_DMA_Init) refers to stm32f10x_dma.o(i.DMA_DeInit) for DMA_DeInit
    bsp_comf1.o(i.BSP_DMA_Init) refers to stm32f10x_dma.o(i.DMA_Init) for DMA_Init
    bsp_comf1.o(i.BSP_DMA_Init) refers to stm32f10x_dma.o(i.DMA_Cmd) for DMA_Cmd
    bsp_comf1.o(i.BSP_DMA_Init) refers to stm32f10x_usart.o(i.USART_DMACmd) for USART_DMACmd
    bsp_comf1.o(i.BSP_DMA_Init) refers to bsp_comf1.o(.data) for .data
    bsp_comf1.o(i.BSP_USART_DMARecReset) refers to stm32f10x_dma.o(i.DMA_Cmd) for DMA_Cmd
    bsp_comf1.o(i.BSP_USART_DMARecReset) refers to bsp_comf1.o(.data) for .data
    bsp_comf1.o(i.BSP_USART_Init) refers to app_bget.o(i.APP_BGetz) for APP_BGetz
    bsp_comf1.o(i.BSP_USART_Init) refers to app_ringbuffer.o(i.APP_MessageQuene_Init) for APP_MessageQuene_Init
    bsp_comf1.o(i.BSP_USART_Init) refers to stm32f10x_rcc.o(i.RCC_APB2PeriphClockCmd) for RCC_APB2PeriphClockCmd
    bsp_comf1.o(i.BSP_USART_Init) refers to stm32f10x_rcc.o(i.RCC_APB1PeriphClockCmd) for RCC_APB1PeriphClockCmd
    bsp_comf1.o(i.BSP_USART_Init) refers to stm32f10x_usart.o(i.USART_DeInit) for USART_DeInit
    bsp_comf1.o(i.BSP_USART_Init) refers to stm32f10x_gpio.o(i.GPIO_Init) for GPIO_Init
    bsp_comf1.o(i.BSP_USART_Init) refers to stm32f10x_usart.o(i.USART_Init) for USART_Init
    bsp_comf1.o(i.BSP_USART_Init) refers to stm32f10x_usart.o(i.USART_Cmd) for USART_Cmd
    bsp_comf1.o(i.BSP_USART_Init) refers to stm32f10x_usart.o(i.USART_ClearFlag) for USART_ClearFlag
    bsp_comf1.o(i.BSP_USART_Init) refers to stm32f10x_usart.o(i.USART_ITConfig) for USART_ITConfig
    bsp_comf1.o(i.BSP_USART_Init) refers to misc.o(i.NVIC_Init) for NVIC_Init
    bsp_comf1.o(i.BSP_USART_Init) refers to stm32f10x_rcc.o(i.RCC_AHBPeriphClockCmd) for RCC_AHBPeriphClockCmd
    bsp_comf1.o(i.BSP_USART_Init) refers to stm32f10x_dma.o(i.DMA_DeInit) for DMA_DeInit
    bsp_comf1.o(i.BSP_USART_Init) refers to stm32f10x_dma.o(i.DMA_Init) for DMA_Init
    bsp_comf1.o(i.BSP_USART_Init) refers to stm32f10x_dma.o(i.DMA_Cmd) for DMA_Cmd
    bsp_comf1.o(i.BSP_USART_Init) refers to stm32f10x_usart.o(i.USART_DMACmd) for USART_DMACmd
    bsp_comf1.o(i.BSP_USART_Init) refers to bsp_comf1.o(.data) for .data
    bsp_comf1.o(i.BSP_USART_Putc) refers to bsp_comf1.o(.data) for .data
    bsp_comf1.o(i.BSP_USART_Puts) refers to bsp_comf1.o(.data) for .data
    bsp_comf1.o(i.BSP_USART_RecCallback) refers to app_ringbuffer.o(i.APP_MessageQuene_In) for APP_MessageQuene_In
    bsp_comf1.o(i.BSP_USART_RecCallback) refers to memseta.o(.text) for __aeabi_memclr
    bsp_comf1.o(i.BSP_USART_RecCallback) refers to stm32f10x_dma.o(i.DMA_Cmd) for DMA_Cmd
    bsp_comf1.o(i.BSP_USART_RecCallback) refers to stm32f10x_usart.o(i.USART_ClearITPendingBit) for USART_ClearITPendingBit
    bsp_comf1.o(i.BSP_USART_RecCallback) refers to bsp_comf1.o(.data) for .data
    bsp_comf1.o(i.BSP_USART_ReturnQue) refers to bsp_comf1.o(.data) for .data
    bsp_comf1.o(i.BSP_USART_Send) refers to bsp_comf1.o(.data) for .data
    bsp_comf1.o(i.USART1_IRQHandler) refers to stm32f10x_usart.o(i.USART_GetITStatus) for USART_GetITStatus
    bsp_comf1.o(i.USART1_IRQHandler) refers to bsp_comf1.o(i.BSP_USART_RecCallback) for BSP_USART_RecCallback
    bsp_comf1.o(i.USART2_IRQHandler) refers to stm32f10x_usart.o(i.USART_GetITStatus) for USART_GetITStatus
    bsp_comf1.o(i.USART2_IRQHandler) refers to bsp_comf1.o(i.BSP_USART_RecCallback) for BSP_USART_RecCallback
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.thread.cb) for os_idle_thread_cb
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.thread.stack) for os_idle_thread_stack
    rtx_lib.o(.data) refers to irq_cm3.o(.constdata) for irqRtxLib
    rtx_lib.o(.data.os.thread.mpi) refers to rtx_lib.o(.bss.os.thread.cb) for os_thread_cb
    rtx_lib.o(.rodata) refers to rtx_lib.o(.bss.os) for os_isr_queue
    rtx_lib.o(.rodata) refers to rtx_lib.o(.bss.os.thread.stack) for os_thread_stack
    rtx_lib.o(.rodata) refers to rtx_lib.o(.bss.os) for os_mem
    rtx_lib.o(.rodata) refers to rtx_lib.o(.data.os.thread.mpi) for os_mpi_thread
    rtx_lib.o(.rodata) refers to rtx_lib.o(.constdata) for os_idle_thread_attr
    stm32f10x_gpio.o(i.GPIO_AFIODeInit) refers to stm32f10x_rcc.o(i.RCC_APB2PeriphResetCmd) for RCC_APB2PeriphResetCmd
    stm32f10x_gpio.o(i.GPIO_DeInit) refers to stm32f10x_rcc.o(i.RCC_APB2PeriphResetCmd) for RCC_APB2PeriphResetCmd
    stm32f10x_rcc.o(i.RCC_GetClocksFreq) refers to stm32f10x_rcc.o(.data) for .data
    stm32f10x_usart.o(i.USART_DeInit) refers to stm32f10x_rcc.o(i.RCC_APB1PeriphResetCmd) for RCC_APB1PeriphResetCmd
    stm32f10x_usart.o(i.USART_DeInit) refers to stm32f10x_rcc.o(i.RCC_APB2PeriphResetCmd) for RCC_APB2PeriphResetCmd
    stm32f10x_usart.o(i.USART_Init) refers to stm32f10x_rcc.o(i.RCC_GetClocksFreq) for RCC_GetClocksFreq
    startup_stm32f10x_md.o(RESET) refers to startup_stm32f10x_md.o(STACK) for __initial_sp
    startup_stm32f10x_md.o(RESET) refers to startup_stm32f10x_md.o(.text) for Reset_Handler
    startup_stm32f10x_md.o(RESET) refers to stm32f10x_it.o(i.NMI_Handler) for NMI_Handler
    startup_stm32f10x_md.o(RESET) refers to stm32f10x_it.o(i.HardFault_Handler) for HardFault_Handler
    startup_stm32f10x_md.o(RESET) refers to stm32f10x_it.o(i.MemManage_Handler) for MemManage_Handler
    startup_stm32f10x_md.o(RESET) refers to stm32f10x_it.o(i.BusFault_Handler) for BusFault_Handler
    startup_stm32f10x_md.o(RESET) refers to stm32f10x_it.o(i.UsageFault_Handler) for UsageFault_Handler
    startup_stm32f10x_md.o(RESET) refers to irq_cm3.o(.text) for SVC_Handler
    startup_stm32f10x_md.o(RESET) refers to stm32f10x_it.o(i.DebugMon_Handler) for DebugMon_Handler
    startup_stm32f10x_md.o(RESET) refers to bsp_comf1.o(i.USART1_IRQHandler) for USART1_IRQHandler
    startup_stm32f10x_md.o(RESET) refers to bsp_comf1.o(i.USART2_IRQHandler) for USART2_IRQHandler
    startup_stm32f10x_md.o(.text) refers to system_stm32f10x.o(i.SystemInit) for SystemInit
    startup_stm32f10x_md.o(.text) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    system_stm32f10x.o(i.SystemCoreClockUpdate) refers to system_stm32f10x.o(.data) for .data
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for svcRtxKernelInitialize
    rtx_kernel.o(.ARM.exidx.text.osKernelInitialize) refers to rtx_kernel.o(.text.osKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for svcRtxKernelGetInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo) refers to rtx_kernel.o(.text.osKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to memcpya.o(.text) for __aeabi_memcpy
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.rodata.str1.4) for .L.str
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for svcRtxKernelGetState
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelGetState) refers to rtx_kernel.o(.text.osKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for svcRtxKernelStart
    rtx_kernel.o(.ARM.exidx.text.osKernelStart) refers to rtx_kernel.o(.text.osKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for svcRtxKernelLock
    rtx_kernel.o(.ARM.exidx.text.osKernelLock) refers to rtx_kernel.o(.text.osKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for svcRtxKernelUnlock
    rtx_kernel.o(.ARM.exidx.text.osKernelUnlock) refers to rtx_kernel.o(.text.osKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for svcRtxKernelRestoreLock
    rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.osKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for svcRtxKernelSuspend
    rtx_kernel.o(.ARM.exidx.text.osKernelSuspend) refers to rtx_kernel.o(.text.osKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for svcRtxKernelResume
    rtx_kernel.o(.ARM.exidx.text.osKernelResume) refers to rtx_kernel.o(.text.osKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for svcRtxKernelGetTickCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.osKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for svcRtxKernelGetTickFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.osKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickFreq) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for svcRtxKernelGetSysTimerCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.osKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetCount) for OS_Tick_GetCount
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetOverflow) for OS_Tick_GetOverflow
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetInterval) for OS_Tick_GetInterval
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to os_systick.o(.text.OS_Tick_GetClock) for OS_Tick_GetClock
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for svcRtxKernelGetSysTimerFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.osKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) refers to os_systick.o(.text.OS_Tick_GetClock) for OS_Tick_GetClock
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to memseta.o(.text) for __aeabi_memclr4
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_memory.o(.text.osRtxMemoryInit) for osRtxMemoryInit
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadStartup) for osRtxThreadStartup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Setup) for OS_Tick_Setup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_GetIRQn) for OS_Tick_GetIRQn
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.svcRtxKernelStart) refers to irq_cm3.o(.text) for SysTick_Handler
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to os_systick.o(.text.OS_Tick_Disable) for OS_Tick_Disable
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_kernel.o(.text.svcRtxKernelResume) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.data.os) refers to rtx_kernel.o(.rodata.str1.4) for .L.str
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListSort) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove) refers to rtx_thread.o(.text.osRtxThreadListRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch) refers to rtx_thread.o(.text.osRtxThreadSwitch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadStackCheck) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_thread.o(.text.osRtxThreadStackCheck) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadStackCheck) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadBlock) for osRtxThreadBlock
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadDispatch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadBlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock) refers to rtx_thread.o(.text.osRtxThreadBlock) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for osRtxThreadDelayInsert
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayInsert) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_config.o(i.osRtxIdleThread) for osRtxIdleThread
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_lib.o(i.osRtxTimerThread) for osRtxTimerThread
    rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup) refers to rtx_thread.o(.text.osRtxThreadStartup) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to memseta.o(.text) for __aeabi_memclr4
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osThreadExit) for osThreadExit
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for osRtxThreadPostProcess
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.ARM.exidx.text.osThreadNew) refers to rtx_thread.o(.text.osThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for svcRtxThreadGetName
    rtx_thread.o(.ARM.exidx.text.osThreadGetName) refers to rtx_thread.o(.text.osThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for svcRtxThreadGetId
    rtx_thread.o(.ARM.exidx.text.osThreadGetId) refers to rtx_thread.o(.text.osThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for svcRtxThreadGetState
    rtx_thread.o(.ARM.exidx.text.osThreadGetState) refers to rtx_thread.o(.text.osThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for svcRtxThreadGetStackSize
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize) refers to rtx_thread.o(.text.osThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for svcRtxThreadGetStackSpace
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.osThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for svcRtxThreadSetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadSetPriority) refers to rtx_thread.o(.text.osThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for svcRtxThreadGetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadGetPriority) refers to rtx_thread.o(.text.osThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for svcRtxThreadYield
    rtx_thread.o(.ARM.exidx.text.osThreadYield) refers to rtx_thread.o(.text.osThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for svcRtxThreadSuspend
    rtx_thread.o(.ARM.exidx.text.osThreadSuspend) refers to rtx_thread.o(.text.osThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for svcRtxThreadResume
    rtx_thread.o(.ARM.exidx.text.osThreadResume) refers to rtx_thread.o(.text.osThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for svcRtxThreadDetach
    rtx_thread.o(.ARM.exidx.text.osThreadDetach) refers to rtx_thread.o(.text.osThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for svcRtxThreadJoin
    rtx_thread.o(.ARM.exidx.text.osThreadJoin) refers to rtx_thread.o(.text.osThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for svcRtxThreadExit
    rtx_thread.o(.ARM.exidx.text.osThreadExit) refers to rtx_thread.o(.text.osThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for svcRtxThreadTerminate
    rtx_thread.o(.ARM.exidx.text.osThreadTerminate) refers to rtx_thread.o(.text.osThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for svcRtxThreadGetCount
    rtx_thread.o(.ARM.exidx.text.osThreadGetCount) refers to rtx_thread.o(.text.osThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for svcRtxThreadEnumerate
    rtx_thread.o(.ARM.exidx.text.osThreadEnumerate) refers to rtx_thread.o(.text.osThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for svcRtxThreadFlagsSet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet) refers to rtx_thread.o(.text.osThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for svcRtxThreadFlagsClear
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear) refers to rtx_thread.o(.text.osThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for svcRtxThreadFlagsGet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet) refers to rtx_thread.o(.text.osThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for svcRtxThreadFlagsWait
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait) refers to rtx_thread.o(.text.osThreadFlagsWait) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.ThreadFlagsCheck) refers to rtx_thread.o(.text.ThreadFlagsCheck) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetId) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetStackSpace) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for osRtxThreadDelayInsert
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for osRtxThreadListUnlink
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListUnlink) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadFree) refers to rtx_thread.o(.text.osRtxThreadFree) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for osRtxThreadListUnlink
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadEnumerate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelay) refers to rtx_delay.o(.text.svcRtxDelay) for svcRtxDelay
    rtx_delay.o(.ARM.exidx.text.osDelay) refers to rtx_delay.o(.text.osDelay) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for svcRtxDelayUntil
    rtx_delay.o(.ARM.exidx.text.osDelayUntil) refers to rtx_delay.o(.text.osDelayUntil) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelay) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.ARM.exidx.text.svcRtxDelay) refers to rtx_delay.o(.text.svcRtxDelay) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for [Anonymous Symbol]
    irq_cm3.o(.text) refers to rtx_system.o(.text.osRtxPendSV_Handler) for osRtxPendSV_Handler
    irq_cm3.o(.text) refers to rtx_system.o(.text.osRtxTick_Handler) for osRtxTick_Handler
    irq_cm3.o(.text) refers to rtx_kernel.o(.data.os) for osRtxInfo
    irq_cm3.o(.text) refers to rtx_lib.o(.constdata) for osRtxUserSVC
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for svcRtxMutexNew
    rtx_mutex.o(.ARM.exidx.text.osMutexNew) refers to rtx_mutex.o(.text.osMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for svcRtxMutexGetName
    rtx_mutex.o(.ARM.exidx.text.osMutexGetName) refers to rtx_mutex.o(.text.osMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for svcRtxMutexAcquire
    rtx_mutex.o(.ARM.exidx.text.osMutexAcquire) refers to rtx_mutex.o(.text.osMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for svcRtxMutexRelease
    rtx_mutex.o(.ARM.exidx.text.osMutexRelease) refers to rtx_mutex.o(.text.osMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for svcRtxMutexGetOwner
    rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner) refers to rtx_mutex.o(.text.osMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for svcRtxMutexDelete
    rtx_mutex.o(.ARM.exidx.text.osMutexDelete) refers to rtx_mutex.o(.text.osMutexDelete) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to memseta.o(.text) for __aeabi_memclr4
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit) refers to rtx_memory.o(.text.osRtxMemoryInit) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for svcRtxMemoryPoolNew
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.osMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for svcRtxMemoryPoolGetName
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.osMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for svcRtxMemoryPoolAlloc
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.osMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for svcRtxMemoryPoolFree
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.osMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for svcRtxMemoryPoolGetCapacity
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.osMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for svcRtxMemoryPoolGetBlockSize
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.osMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for svcRtxMemoryPoolGetCount
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.osMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for svcRtxMemoryPoolGetSpace
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.osMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for svcRtxMemoryPoolDelete
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.osMemoryPoolDelete) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to memseta.o(.text) for __aeabi_memclr
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for osRtxMemoryPoolPostProcess
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxTick_Handler) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for OS_Tick_AcknowledgeIRQ
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxTick_Handler) refers to rtx_system.o(.text.osRtxTick_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.osRtxPendSV_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxPostProcess) refers to rtx_system.o(.text.osRtxPostProcess) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Setup) refers to system_stm32f10x.o(.data) for SystemCoreClock
    os_systick.o(.text.OS_Tick_Setup) refers to os_systick.o(.bss.PendST) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Setup) refers to os_systick.o(.text.OS_Tick_Setup) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Enable) refers to os_systick.o(.bss.PendST) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Enable) refers to os_systick.o(.text.OS_Tick_Enable) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Disable) refers to os_systick.o(.bss.PendST) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Disable) refers to os_systick.o(.text.OS_Tick_Disable) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn) refers to os_systick.o(.text.OS_Tick_GetIRQn) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_GetClock) refers to system_stm32f10x.o(.data) for SystemCoreClock
    os_systick.o(.ARM.exidx.text.OS_Tick_GetClock) refers to os_systick.o(.text.OS_Tick_GetClock) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval) refers to os_systick.o(.text.OS_Tick_GetInterval) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetCount) refers to os_systick.o(.text.OS_Tick_GetCount) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow) refers to os_systick.o(.text.OS_Tick_GetOverflow) for [Anonymous Symbol]
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry10a.o(.ARM.Collect$$$$0000000D) for __rt_final_cpp
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry11a.o(.ARM.Collect$$$$0000000F) for __rt_final_exit
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry7b.o(.ARM.Collect$$$$00000008) for _main_clock
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry8b.o(.ARM.Collect$$$$0000000A) for _main_cpp_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry9a.o(.ARM.Collect$$$$0000000B) for _main_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry5.o(.ARM.Collect$$$$00000004) for _main_scatterload
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry2.o(.ARM.Collect$$$$00000001) for _main_stk
    printfb.o(i.__0fprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0fprintf$bare) refers to app_f1.o(i.fputc) for fputc
    printfb.o(i.__0printf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0printf$bare) refers to app_f1.o(i.fputc) for fputc
    printfb.o(i.__0printf$bare) refers to stdout.o(.data) for __stdout
    printfb.o(i.__0snprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0snprintf$bare) refers to printfb.o(i._snputc) for _snputc
    printfb.o(i.__0sprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0sprintf$bare) refers to printfb.o(i._sputc) for _sputc
    printfb.o(i.__0vfprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vfprintf$bare) refers to app_f1.o(i.fputc) for fputc
    printfb.o(i.__0vprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vprintf$bare) refers to app_f1.o(i.fputc) for fputc
    printfb.o(i.__0vprintf$bare) refers to stdout.o(.data) for __stdout
    printfb.o(i.__0vsnprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vsnprintf$bare) refers to printfb.o(i._snputc) for _snputc
    printfb.o(i.__0vsprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vsprintf$bare) refers to printfb.o(i._sputc) for _sputc
    printf0.o(i.__0fprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0fprintf$0) refers to app_f1.o(i.fputc) for fputc
    printf0.o(i.__0printf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0printf$0) refers to app_f1.o(i.fputc) for fputc
    printf0.o(i.__0printf$0) refers to stdout.o(.data) for __stdout
    printf0.o(i.__0snprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0snprintf$0) refers to printf0.o(i._snputc) for _snputc
    printf0.o(i.__0sprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0sprintf$0) refers to printf0.o(i._sputc) for _sputc
    printf0.o(i.__0vfprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vfprintf$0) refers to app_f1.o(i.fputc) for fputc
    printf0.o(i.__0vprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vprintf$0) refers to app_f1.o(i.fputc) for fputc
    printf0.o(i.__0vprintf$0) refers to stdout.o(.data) for __stdout
    printf0.o(i.__0vsnprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vsnprintf$0) refers to printf0.o(i._snputc) for _snputc
    printf0.o(i.__0vsprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vsprintf$0) refers to printf0.o(i._sputc) for _sputc
    printf1.o(i.__0fprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0fprintf$1) refers to app_f1.o(i.fputc) for fputc
    printf1.o(i.__0printf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0printf$1) refers to app_f1.o(i.fputc) for fputc
    printf1.o(i.__0printf$1) refers to stdout.o(.data) for __stdout
    printf1.o(i.__0snprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0snprintf$1) refers to printf1.o(i._snputc) for _snputc
    printf1.o(i.__0sprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0sprintf$1) refers to printf1.o(i._sputc) for _sputc
    printf1.o(i.__0vfprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vfprintf$1) refers to app_f1.o(i.fputc) for fputc
    printf1.o(i.__0vprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vprintf$1) refers to app_f1.o(i.fputc) for fputc
    printf1.o(i.__0vprintf$1) refers to stdout.o(.data) for __stdout
    printf1.o(i.__0vsnprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vsnprintf$1) refers to printf1.o(i._snputc) for _snputc
    printf1.o(i.__0vsprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vsprintf$1) refers to printf1.o(i._sputc) for _sputc
    printf1.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf2.o(i.__0fprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0fprintf$2) refers to app_f1.o(i.fputc) for fputc
    printf2.o(i.__0printf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0printf$2) refers to app_f1.o(i.fputc) for fputc
    printf2.o(i.__0printf$2) refers to stdout.o(.data) for __stdout
    printf2.o(i.__0snprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0snprintf$2) refers to printf2.o(i._snputc) for _snputc
    printf2.o(i.__0sprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0sprintf$2) refers to printf2.o(i._sputc) for _sputc
    printf2.o(i.__0vfprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vfprintf$2) refers to app_f1.o(i.fputc) for fputc
    printf2.o(i.__0vprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vprintf$2) refers to app_f1.o(i.fputc) for fputc
    printf2.o(i.__0vprintf$2) refers to stdout.o(.data) for __stdout
    printf2.o(i.__0vsnprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vsnprintf$2) refers to printf2.o(i._snputc) for _snputc
    printf2.o(i.__0vsprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vsprintf$2) refers to printf2.o(i._sputc) for _sputc
    printf3.o(i.__0fprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0fprintf$3) refers to app_f1.o(i.fputc) for fputc
    printf3.o(i.__0printf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0printf$3) refers to app_f1.o(i.fputc) for fputc
    printf3.o(i.__0printf$3) refers to stdout.o(.data) for __stdout
    printf3.o(i.__0snprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0snprintf$3) refers to printf3.o(i._snputc) for _snputc
    printf3.o(i.__0sprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0sprintf$3) refers to printf3.o(i._sputc) for _sputc
    printf3.o(i.__0vfprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vfprintf$3) refers to app_f1.o(i.fputc) for fputc
    printf3.o(i.__0vprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vprintf$3) refers to app_f1.o(i.fputc) for fputc
    printf3.o(i.__0vprintf$3) refers to stdout.o(.data) for __stdout
    printf3.o(i.__0vsnprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vsnprintf$3) refers to printf3.o(i._snputc) for _snputc
    printf3.o(i.__0vsprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vsprintf$3) refers to printf3.o(i._sputc) for _sputc
    printf3.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf4.o(i.__0fprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0fprintf$4) refers to app_f1.o(i.fputc) for fputc
    printf4.o(i.__0printf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0printf$4) refers to app_f1.o(i.fputc) for fputc
    printf4.o(i.__0printf$4) refers to stdout.o(.data) for __stdout
    printf4.o(i.__0snprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0snprintf$4) refers to printf4.o(i._snputc) for _snputc
    printf4.o(i.__0sprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0sprintf$4) refers to printf4.o(i._sputc) for _sputc
    printf4.o(i.__0vfprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vfprintf$4) refers to app_f1.o(i.fputc) for fputc
    printf4.o(i.__0vprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vprintf$4) refers to app_f1.o(i.fputc) for fputc
    printf4.o(i.__0vprintf$4) refers to stdout.o(.data) for __stdout
    printf4.o(i.__0vsnprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vsnprintf$4) refers to printf4.o(i._snputc) for _snputc
    printf4.o(i.__0vsprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vsprintf$4) refers to printf4.o(i._sputc) for _sputc
    printf4.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf5.o(i.__0fprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0fprintf$5) refers to app_f1.o(i.fputc) for fputc
    printf5.o(i.__0printf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0printf$5) refers to app_f1.o(i.fputc) for fputc
    printf5.o(i.__0printf$5) refers to stdout.o(.data) for __stdout
    printf5.o(i.__0snprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0snprintf$5) refers to printf5.o(i._snputc) for _snputc
    printf5.o(i.__0sprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0sprintf$5) refers to printf5.o(i._sputc) for _sputc
    printf5.o(i.__0vfprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vfprintf$5) refers to app_f1.o(i.fputc) for fputc
    printf5.o(i.__0vprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vprintf$5) refers to app_f1.o(i.fputc) for fputc
    printf5.o(i.__0vprintf$5) refers to stdout.o(.data) for __stdout
    printf5.o(i.__0vsnprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vsnprintf$5) refers to printf5.o(i._snputc) for _snputc
    printf5.o(i.__0vsprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vsprintf$5) refers to printf5.o(i._sputc) for _sputc
    printf5.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf6.o(i.__0fprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0fprintf$6) refers to app_f1.o(i.fputc) for fputc
    printf6.o(i.__0printf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0printf$6) refers to app_f1.o(i.fputc) for fputc
    printf6.o(i.__0printf$6) refers to stdout.o(.data) for __stdout
    printf6.o(i.__0snprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0snprintf$6) refers to printf6.o(i._snputc) for _snputc
    printf6.o(i.__0sprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0sprintf$6) refers to printf6.o(i._sputc) for _sputc
    printf6.o(i.__0vfprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vfprintf$6) refers to app_f1.o(i.fputc) for fputc
    printf6.o(i.__0vprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vprintf$6) refers to app_f1.o(i.fputc) for fputc
    printf6.o(i.__0vprintf$6) refers to stdout.o(.data) for __stdout
    printf6.o(i.__0vsnprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vsnprintf$6) refers to printf6.o(i._snputc) for _snputc
    printf6.o(i.__0vsprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vsprintf$6) refers to printf6.o(i._sputc) for _sputc
    printf6.o(i._printf_core) refers to printf6.o(i._printf_pre_padding) for _printf_pre_padding
    printf6.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf6.o(i._printf_core) refers to printf6.o(i._printf_post_padding) for _printf_post_padding
    printf7.o(i.__0fprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0fprintf$7) refers to app_f1.o(i.fputc) for fputc
    printf7.o(i.__0printf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0printf$7) refers to app_f1.o(i.fputc) for fputc
    printf7.o(i.__0printf$7) refers to stdout.o(.data) for __stdout
    printf7.o(i.__0snprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0snprintf$7) refers to printf7.o(i._snputc) for _snputc
    printf7.o(i.__0sprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0sprintf$7) refers to printf7.o(i._sputc) for _sputc
    printf7.o(i.__0vfprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vfprintf$7) refers to app_f1.o(i.fputc) for fputc
    printf7.o(i.__0vprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vprintf$7) refers to app_f1.o(i.fputc) for fputc
    printf7.o(i.__0vprintf$7) refers to stdout.o(.data) for __stdout
    printf7.o(i.__0vsnprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vsnprintf$7) refers to printf7.o(i._snputc) for _snputc
    printf7.o(i.__0vsprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vsprintf$7) refers to printf7.o(i._sputc) for _sputc
    printf7.o(i._printf_core) refers to printf7.o(i._printf_pre_padding) for _printf_pre_padding
    printf7.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf7.o(i._printf_core) refers to printf7.o(i._printf_post_padding) for _printf_post_padding
    printf8.o(i.__0fprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0fprintf$8) refers to app_f1.o(i.fputc) for fputc
    printf8.o(i.__0printf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0printf$8) refers to app_f1.o(i.fputc) for fputc
    printf8.o(i.__0printf$8) refers to stdout.o(.data) for __stdout
    printf8.o(i.__0snprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0snprintf$8) refers to printf8.o(i._snputc) for _snputc
    printf8.o(i.__0sprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0sprintf$8) refers to printf8.o(i._sputc) for _sputc
    printf8.o(i.__0vfprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vfprintf$8) refers to app_f1.o(i.fputc) for fputc
    printf8.o(i.__0vprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vprintf$8) refers to app_f1.o(i.fputc) for fputc
    printf8.o(i.__0vprintf$8) refers to stdout.o(.data) for __stdout
    printf8.o(i.__0vsnprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vsnprintf$8) refers to printf8.o(i._snputc) for _snputc
    printf8.o(i.__0vsprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vsprintf$8) refers to printf8.o(i._sputc) for _sputc
    printf8.o(i._printf_core) refers to printf8.o(i._printf_pre_padding) for _printf_pre_padding
    printf8.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf8.o(i._printf_core) refers to printf8.o(i._printf_post_padding) for _printf_post_padding
    printfa.o(i.__0fprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0fprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0fprintf) refers to app_f1.o(i.fputc) for fputc
    printfa.o(i.__0printf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0printf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0printf) refers to app_f1.o(i.fputc) for fputc
    printfa.o(i.__0printf) refers to stdout.o(.data) for __stdout
    printfa.o(i.__0snprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0snprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0snprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0sprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0sprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0sprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i.__0vfprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vfprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vfprintf) refers to app_f1.o(i.fputc) for fputc
    printfa.o(i.__0vprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vprintf) refers to app_f1.o(i.fputc) for fputc
    printfa.o(i.__0vprintf) refers to stdout.o(.data) for __stdout
    printfa.o(i.__0vsnprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0vsprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i._fp_digits) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._fp_digits) refers to dmul.o(.text) for __aeabi_dmul
    printfa.o(i._fp_digits) refers to ddiv.o(.text) for __aeabi_ddiv
    printfa.o(i._fp_digits) refers to cdrcmple.o(.text) for __aeabi_cdrcmple
    printfa.o(i._fp_digits) refers to dadd.o(.text) for __aeabi_dadd
    printfa.o(i._fp_digits) refers to dfixul.o(.text) for __aeabi_d2ulz
    printfa.o(i._fp_digits) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_core) refers to printfa.o(i._printf_pre_padding) for _printf_pre_padding
    printfa.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers to printfa.o(i._printf_post_padding) for _printf_post_padding
    printfa.o(i._printf_core) refers to printfa.o(i._fp_digits) for _fp_digits
    printfa.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printfa.o(i._printf_post_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_pre_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._snputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._sputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    fadd.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    fadd.o(.text) refers to fepilogue.o(.text) for _float_epilogue
    fmul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    fdiv.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    fdiv.o(.text) refers to fepilogue.o(.text) for _float_round
    fflti.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    fflti.o(.text) refers to fepilogue.o(.text) for _float_epilogue
    entry2.o(.ARM.Collect$$$$00000001) refers to entry2.o(.ARM.Collect$$$$00002712) for __lit__00000000
    entry2.o(.ARM.Collect$$$$00002712) refers to startup_stm32f10x_md.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to startup_stm32f10x_md.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    entry5.o(.ARM.Collect$$$$00000004) refers to init.o(.text) for __scatterload
    entry9a.o(.ARM.Collect$$$$0000000B) refers to main.o(i.main) for main
    entry9b.o(.ARM.Collect$$$$0000000C) refers to main.o(i.main) for main
    uldiv.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    uldiv.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    dadd.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    dadd.o(.text) refers to llsshr.o(.text) for __aeabi_lasr
    dadd.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dmul.o(.text) refers to depilogue.o(.text) for _double_epilogue
    ddiv.o(.text) refers to depilogue.o(.text) for _double_round
    dfixul.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    dfixul.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    init.o(.text) refers to entry5.o(.ARM.Collect$$$$00000004) for __main_after_scatterload
    depilogue.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    depilogue.o(.text) refers to llushr.o(.text) for __aeabi_llsr


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.rev16_text), (4 bytes).
    Removing main.o(.revsh_text), (4 bytes).
    Removing main.o(.rrx_text), (6 bytes).
    Removing stm32f10x_it.o(.rev16_text), (4 bytes).
    Removing stm32f10x_it.o(.revsh_text), (4 bytes).
    Removing stm32f10x_it.o(.rrx_text), (6 bytes).
    Removing app_f1.o(.rev16_text), (4 bytes).
    Removing app_f1.o(.revsh_text), (4 bytes).
    Removing app_f1.o(.rrx_text), (6 bytes).
    Removing app_f1.o(i.APP_SYS_SoftReset), (16 bytes).
    Removing app_f1.o(i.APP_SYS_Standby), (4 bytes).
    Removing app_softtimer.o(.rev16_text), (4 bytes).
    Removing app_softtimer.o(.revsh_text), (4 bytes).
    Removing app_softtimer.o(.rrx_text), (6 bytes).
    Removing app_softtimer.o(i.APP_SoftTimer_AutoReloadCommand), (44 bytes).
    Removing app_softtimer.o(i.APP_SoftTimer_AutoReloadValue), (28 bytes).
    Removing app_softtimer.o(i.APP_SoftTimer_DelayMS), (232 bytes).
    Removing app_softtimer.o(i.APP_SoftTimer_Delete), (36 bytes).
    Removing app_softtimer.o(i.APP_SoftTimer_GetHandler), (24 bytes).
    Removing app_softtimer.o(i.APP_SoftTimer_GetTick), (68 bytes).
    Removing app_softtimer.o(i.APP_SoftTimer_Pause), (36 bytes).
    Removing app_softtimer.o(i.APP_SoftTimer_Reset), (28 bytes).
    Removing app_bget.o(i.APP_BGetr), (112 bytes).
    Removing app_bget.o(i.APP_BRel), (324 bytes).
    Removing app_ringbuffer.o(i.APP_RingBuffer_Init), (16 bytes).
    Removing app_ringbuffer.o(i.APP_RingBuffer_Insert), (48 bytes).
    Removing app_ringbuffer.o(i.APP_RingBuffer_InsertMult), (142 bytes).
    Removing app_ringbuffer.o(i.APP_RingBuffer_Pop), (50 bytes).
    Removing app_ringbuffer.o(i.APP_RingBuffer_PopMult), (130 bytes).
    Removing app_string.o(i.ulocaltime), (204 bytes).
    Removing app_string.o(i.umktime), (388 bytes).
    Removing app_string.o(i.unumofstr), (60 bytes).
    Removing app_string.o(i.uparsenumber), (104 bytes).
    Removing app_string.o(i.uposofseg), (16 bytes).
    Removing app_string.o(i.urand), (28 bytes).
    Removing app_string.o(i.usnprintf), (18 bytes).
    Removing app_string.o(i.usprintf), (22 bytes).
    Removing app_string.o(i.usrand), (12 bytes).
    Removing app_string.o(i.ustrcasecmp), (90 bytes).
    Removing app_string.o(i.ustrcmp), (62 bytes).
    Removing app_string.o(i.ustrlen), (68 bytes).
    Removing app_string.o(i.ustrncasecmp), (90 bytes).
    Removing app_string.o(i.ustrncmp), (56 bytes).
    Removing app_string.o(i.ustrncpy), (132 bytes).
    Removing app_string.o(i.ustrstr), (104 bytes).
    Removing app_string.o(i.ustrtof), (476 bytes).
    Removing app_string.o(i.ustrtoul), (240 bytes).
    Removing app_string.o(i.uvsnprintf), (744 bytes).
    Removing app_string.o(.constdata), (76 bytes).
    Removing app_string.o(.conststring), (17 bytes).
    Removing app_string.o(.data), (4 bytes).
    Removing app_statemachine.o(i.StateMachine_Delete), (12 bytes).
    Removing app_statemachine.o(i.StateMachine_Init), (18 bytes).
    Removing app_statemachine.o(i.StateMachine_Run), (20 bytes).
    Removing app_statemachine.o(i.StateMachine_SetFuction), (22 bytes).
    Removing app_debug.o(.rev16_text), (4 bytes).
    Removing app_debug.o(.revsh_text), (4 bytes).
    Removing app_debug.o(.rrx_text), (6 bytes).
    Removing bsp_led.o(.rev16_text), (4 bytes).
    Removing bsp_led.o(.revsh_text), (4 bytes).
    Removing bsp_led.o(.rrx_text), (6 bytes).
    Removing bsp_led.o(i.BSP_LED_Off), (24 bytes).
    Removing bsp_led.o(i.BSP_LED_On), (24 bytes).
    Removing bsp_key.o(.rev16_text), (4 bytes).
    Removing bsp_key.o(.revsh_text), (4 bytes).
    Removing bsp_key.o(.rrx_text), (6 bytes).
    Removing bsp_key.o(i.BSP_KEY_Get), (40 bytes).
    Removing bsp_key.o(i.BSP_KEY_Init), (156 bytes).
    Removing bsp_key.o(i.BSP_KEY_InitvaluePool), (20 bytes).
    Removing bsp_key.o(i.BSP_KEY_Poll), (320 bytes).
    Removing bsp_key.o(.bss), (12 bytes).
    Removing bsp_key.o(.data), (136 bytes).
    Removing bsp_comf1.o(.rev16_text), (4 bytes).
    Removing bsp_comf1.o(.revsh_text), (4 bytes).
    Removing bsp_comf1.o(.rrx_text), (6 bytes).
    Removing bsp_comf1.o(i.BSP_DMA_Init), (108 bytes).
    Removing bsp_comf1.o(i.BSP_USART_DMARecReset), (48 bytes).
    Removing bsp_comf1.o(i.BSP_USART_Puts), (60 bytes).
    Removing bsp_comf1.o(i.BSP_USART_Send), (64 bytes).
    Removing rtx_lib.o(.rev16_text), (4 bytes).
    Removing rtx_lib.o(.revsh_text), (4 bytes).
    Removing rtx_lib.o(.rrx_text), (6 bytes).
    Removing rtx_lib.o(.emb_text), (0 bytes).
    Removing rtx_lib.o(.rodata), (56 bytes).
    Removing rtx_lib.o(.data), (4 bytes).
    Removing rtx_config.o(.rev16_text), (4 bytes).
    Removing rtx_config.o(.revsh_text), (4 bytes).
    Removing rtx_config.o(.rrx_text), (6 bytes).
    Removing misc.o(.rev16_text), (4 bytes).
    Removing misc.o(.revsh_text), (4 bytes).
    Removing misc.o(.rrx_text), (6 bytes).
    Removing misc.o(i.NVIC_PriorityGroupConfig), (20 bytes).
    Removing misc.o(i.NVIC_SetVectorTable), (20 bytes).
    Removing misc.o(i.NVIC_SystemLPConfig), (24 bytes).
    Removing misc.o(i.SysTick_CLKSourceConfig), (22 bytes).
    Removing stm32f10x_dma.o(.rev16_text), (4 bytes).
    Removing stm32f10x_dma.o(.revsh_text), (4 bytes).
    Removing stm32f10x_dma.o(.rrx_text), (6 bytes).
    Removing stm32f10x_dma.o(i.DMA_ClearFlag), (24 bytes).
    Removing stm32f10x_dma.o(i.DMA_ClearITPendingBit), (24 bytes).
    Removing stm32f10x_dma.o(i.DMA_GetCurrDataCounter), (6 bytes).
    Removing stm32f10x_dma.o(i.DMA_GetFlagStatus), (32 bytes).
    Removing stm32f10x_dma.o(i.DMA_GetITStatus), (32 bytes).
    Removing stm32f10x_dma.o(i.DMA_ITConfig), (16 bytes).
    Removing stm32f10x_dma.o(i.DMA_SetCurrDataCounter), (4 bytes).
    Removing stm32f10x_dma.o(i.DMA_StructInit), (26 bytes).
    Removing stm32f10x_gpio.o(.rev16_text), (4 bytes).
    Removing stm32f10x_gpio.o(.revsh_text), (4 bytes).
    Removing stm32f10x_gpio.o(.rrx_text), (6 bytes).
    Removing stm32f10x_gpio.o(i.GPIO_AFIODeInit), (22 bytes).
    Removing stm32f10x_gpio.o(i.GPIO_DeInit), (216 bytes).
    Removing stm32f10x_gpio.o(i.GPIO_ETH_MediaInterfaceConfig), (12 bytes).
    Removing stm32f10x_gpio.o(i.GPIO_EXTILineConfig), (40 bytes).
    Removing stm32f10x_gpio.o(i.GPIO_EventOutputCmd), (12 bytes).
    Removing stm32f10x_gpio.o(i.GPIO_EventOutputConfig), (28 bytes).
    Removing stm32f10x_gpio.o(i.GPIO_PinLockConfig), (16 bytes).
    Removing stm32f10x_gpio.o(i.GPIO_PinRemapConfig), (108 bytes).
    Removing stm32f10x_gpio.o(i.GPIO_ReadInputData), (6 bytes).
    Removing stm32f10x_gpio.o(i.GPIO_ReadInputDataBit), (14 bytes).
    Removing stm32f10x_gpio.o(i.GPIO_ReadOutputData), (6 bytes).
    Removing stm32f10x_gpio.o(i.GPIO_ReadOutputDataBit), (14 bytes).
    Removing stm32f10x_gpio.o(i.GPIO_StructInit), (16 bytes).
    Removing stm32f10x_gpio.o(i.GPIO_Write), (4 bytes).
    Removing stm32f10x_gpio.o(i.GPIO_WriteBit), (10 bytes).
    Removing stm32f10x_rcc.o(.rev16_text), (4 bytes).
    Removing stm32f10x_rcc.o(.revsh_text), (4 bytes).
    Removing stm32f10x_rcc.o(.rrx_text), (6 bytes).
    Removing stm32f10x_rcc.o(i.RCC_ADCCLKConfig), (20 bytes).
    Removing stm32f10x_rcc.o(i.RCC_AdjustHSICalibrationValue), (20 bytes).
    Removing stm32f10x_rcc.o(i.RCC_BackupResetCmd), (12 bytes).
    Removing stm32f10x_rcc.o(i.RCC_ClearFlag), (16 bytes).
    Removing stm32f10x_rcc.o(i.RCC_ClearITPendingBit), (12 bytes).
    Removing stm32f10x_rcc.o(i.RCC_ClockSecuritySystemCmd), (12 bytes).
    Removing stm32f10x_rcc.o(i.RCC_DeInit), (64 bytes).
    Removing stm32f10x_rcc.o(i.RCC_GetFlagStatus), (48 bytes).
    Removing stm32f10x_rcc.o(i.RCC_GetITStatus), (20 bytes).
    Removing stm32f10x_rcc.o(i.RCC_GetSYSCLKSource), (16 bytes).
    Removing stm32f10x_rcc.o(i.RCC_HCLKConfig), (20 bytes).
    Removing stm32f10x_rcc.o(i.RCC_HSEConfig), (56 bytes).
    Removing stm32f10x_rcc.o(i.RCC_HSICmd), (12 bytes).
    Removing stm32f10x_rcc.o(i.RCC_ITConfig), (24 bytes).
    Removing stm32f10x_rcc.o(i.RCC_LSEConfig), (36 bytes).
    Removing stm32f10x_rcc.o(i.RCC_LSICmd), (12 bytes).
    Removing stm32f10x_rcc.o(i.RCC_MCOConfig), (12 bytes).
    Removing stm32f10x_rcc.o(i.RCC_PCLK1Config), (20 bytes).
    Removing stm32f10x_rcc.o(i.RCC_PCLK2Config), (20 bytes).
    Removing stm32f10x_rcc.o(i.RCC_PLLCmd), (12 bytes).
    Removing stm32f10x_rcc.o(i.RCC_PLLConfig), (20 bytes).
    Removing stm32f10x_rcc.o(i.RCC_RTCCLKCmd), (12 bytes).
    Removing stm32f10x_rcc.o(i.RCC_RTCCLKConfig), (16 bytes).
    Removing stm32f10x_rcc.o(i.RCC_SYSCLKConfig), (20 bytes).
    Removing stm32f10x_rcc.o(i.RCC_USBCLKConfig), (12 bytes).
    Removing stm32f10x_rcc.o(i.RCC_WaitForHSEStartUp), (56 bytes).
    Removing stm32f10x_usart.o(.rev16_text), (4 bytes).
    Removing stm32f10x_usart.o(.revsh_text), (4 bytes).
    Removing stm32f10x_usart.o(.rrx_text), (6 bytes).
    Removing stm32f10x_usart.o(i.USART_ClockInit), (36 bytes).
    Removing stm32f10x_usart.o(i.USART_ClockStructInit), (12 bytes).
    Removing stm32f10x_usart.o(i.USART_GetFlagStatus), (14 bytes).
    Removing stm32f10x_usart.o(i.USART_HalfDuplexCmd), (18 bytes).
    Removing stm32f10x_usart.o(i.USART_IrDACmd), (18 bytes).
    Removing stm32f10x_usart.o(i.USART_IrDAConfig), (16 bytes).
    Removing stm32f10x_usart.o(i.USART_LINBreakDetectLengthConfig), (16 bytes).
    Removing stm32f10x_usart.o(i.USART_LINCmd), (18 bytes).
    Removing stm32f10x_usart.o(i.USART_OneBitMethodCmd), (18 bytes).
    Removing stm32f10x_usart.o(i.USART_OverSampling8Cmd), (18 bytes).
    Removing stm32f10x_usart.o(i.USART_ReceiveData), (8 bytes).
    Removing stm32f10x_usart.o(i.USART_ReceiverWakeUpCmd), (18 bytes).
    Removing stm32f10x_usart.o(i.USART_SendBreak), (10 bytes).
    Removing stm32f10x_usart.o(i.USART_SendData), (8 bytes).
    Removing stm32f10x_usart.o(i.USART_SetAddress), (16 bytes).
    Removing stm32f10x_usart.o(i.USART_SetGuardTime), (16 bytes).
    Removing stm32f10x_usart.o(i.USART_SetPrescaler), (16 bytes).
    Removing stm32f10x_usart.o(i.USART_SmartCardCmd), (18 bytes).
    Removing stm32f10x_usart.o(i.USART_SmartCardNACKCmd), (18 bytes).
    Removing stm32f10x_usart.o(i.USART_StructInit), (22 bytes).
    Removing stm32f10x_usart.o(i.USART_WakeUpConfig), (16 bytes).
    Removing startup_stm32f10x_md.o(HEAP), (512 bytes).
    Removing system_stm32f10x.o(.rev16_text), (4 bytes).
    Removing system_stm32f10x.o(.revsh_text), (4 bytes).
    Removing system_stm32f10x.o(.rrx_text), (6 bytes).
    Removing rtx_kernel.o(.text), (0 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetInfo), (52 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetInfo), (48 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetState), (52 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetState), (12 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelLock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelUnlock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelRestoreLock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelSuspend), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelResume), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelResume), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickCount), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetTickCount), (12 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickFreq), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetTickFreq), (12 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerCount), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerFreq), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq), (4 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelLock), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelUnlock), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelRestoreLock), (44 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelSuspend), (84 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelResume), (156 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume), (8 bytes).
    Removing rtx_thread.o(.text), (0 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadListSort), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadRegPtr), (6 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadStackCheck), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadNew), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetName), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetName), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetId), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetState), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSize), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSpace), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSetPriority), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetPriority), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadYield), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSuspend), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.osThreadResume), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.osThreadDetach), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osThreadJoin), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadJoin), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadExit), (8 bytes).
    Removing rtx_thread.o(.text.osThreadTerminate), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetCount), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.osThreadEnumerate), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsSet), (92 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsClear), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsGet), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsWait), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.ThreadFlagsCheck), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetName), (20 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetId), (12 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetState), (22 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSize), (20 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSpace), (68 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSetPriority), (80 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetPriority), (30 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadYield), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSuspend), (128 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadResume), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadDetach), (64 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadListUnlink), (32 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadFree), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadJoin), (92 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadTerminate), (188 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetCount), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadEnumerate), (104 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsSet), (108 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsClear), (72 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsGet), (28 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsWait), (76 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait), (8 bytes).
    Removing rtx_delay.o(.text), (0 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelay), (8 bytes).
    Removing rtx_delay.o(.text.osDelayUntil), (36 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelayUntil), (8 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelay), (8 bytes).
    Removing rtx_delay.o(.text.svcRtxDelayUntil), (40 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil), (8 bytes).
    Removing irq_cm3.o(.constdata), (1 bytes).
    Removing rtx_mutex.o(.text), (0 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexNew), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetName), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexAcquire), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexRelease), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetOwner), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexDelete), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexDelete), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexNew), (108 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetName), (20 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexAcquire), (152 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexRelease), (188 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetOwner), (24 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexDelete), (212 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete), (8 bytes).
    Removing rtx_memory.o(.text), (0 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree), (8 bytes).
    Removing rtx_mempool.o(.text), (0 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolNew), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetName), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolAlloc), (60 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolFree), (84 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCapacity), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity), (20 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetBlockSize), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize), (20 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCount), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCount), (20 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetSpace), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace), (24 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolDelete), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolNew), (284 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.osRtxMemoryPoolPostProcess), (44 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetName), (20 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolAlloc), (60 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolFree), (74 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolDelete), (120 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete), (8 bytes).
    Removing rtx_system.o(.text), (0 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxTick_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler), (8 bytes).
    Removing rtx_system.o(.text.osRtxPostProcess), (116 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPostProcess), (8 bytes).
    Removing os_systick.o(.text), (0 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Setup), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Enable), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_Disable), (48 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Disable), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetClock), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetClock), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetInterval), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetCount), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetCount), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetOverflow), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow), (8 bytes).
    Removing fadd.o(.text), (176 bytes).
    Removing fmul.o(.text), (100 bytes).
    Removing fdiv.o(.text), (124 bytes).
    Removing fflti.o(.text), (18 bytes).
    Removing fepilogue.o(.text), (110 bytes).
    Removing dadd.o(.text), (334 bytes).
    Removing dmul.o(.text), (228 bytes).
    Removing ddiv.o(.text), (222 bytes).
    Removing dfixul.o(.text), (48 bytes).
    Removing cdrcmple.o(.text), (48 bytes).
    Removing depilogue.o(.text), (186 bytes).

445 unused section(s) (total 15988 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/../cmprslib/zerorunl2.c          0x00000000   Number         0  __dczerorl2.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uldiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uidiv.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry2.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry5.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llushr.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llshl.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llsshr.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf4.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf3.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf0.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf2.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printfa.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf8.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf7.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf6.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf1.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf5.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printfb.o ABSOLUTE
    ../clib/microlib/printf/stubs.s          0x00000000   Number         0  stubs.o ABSOLUTE
    ../clib/microlib/stdio/streams.c         0x00000000   Number         0  stdout.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpyb.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpya.o ABSOLUTE
    ../clib/microlib/string/memset.c         0x00000000   Number         0  memseta.o ABSOLUTE
    ../clib/microlib/string/strcmp.c         0x00000000   Number         0  strcmp.o ABSOLUTE
    ../clib/microlib/string/strstr.c         0x00000000   Number         0  strstr.o ABSOLUTE
    ../clib/microlib/stubs.s                 0x00000000   Number         0  iusefp.o ABSOLUTE
    ../fplib/microlib/fpadd.c                0x00000000   Number         0  dadd.o ABSOLUTE
    ../fplib/microlib/fpadd.c                0x00000000   Number         0  fadd.o ABSOLUTE
    ../fplib/microlib/fpdiv.c                0x00000000   Number         0  ddiv.o ABSOLUTE
    ../fplib/microlib/fpdiv.c                0x00000000   Number         0  fdiv.o ABSOLUTE
    ../fplib/microlib/fpepilogue.c           0x00000000   Number         0  depilogue.o ABSOLUTE
    ../fplib/microlib/fpepilogue.c           0x00000000   Number         0  fepilogue.o ABSOLUTE
    ../fplib/microlib/fpfix.c                0x00000000   Number         0  dfixul.o ABSOLUTE
    ../fplib/microlib/fpflt.c                0x00000000   Number         0  fflti.o ABSOLUTE
    ../fplib/microlib/fpmul.c                0x00000000   Number         0  dmul.o ABSOLUTE
    ../fplib/microlib/fpmul.c                0x00000000   Number         0  fmul.o ABSOLUTE
    ..\..\..\Source\ARM\irq_cm3.s            0x00000000   Number         0  irq_cm3.o ABSOLUTE
    ..\SL_RTE\SL_APP\APP_BGet.c              0x00000000   Number         0  app_bget.o ABSOLUTE
    ..\SL_RTE\SL_APP\APP_Cmdline.c           0x00000000   Number         0  app_cmdline.o ABSOLUTE
    ..\SL_RTE\SL_APP\APP_Debug.c             0x00000000   Number         0  app_debug.o ABSOLUTE
    ..\SL_RTE\SL_APP\APP_F1.c                0x00000000   Number         0  app_f1.o ABSOLUTE
    ..\SL_RTE\SL_APP\APP_RingBuffer.c        0x00000000   Number         0  app_ringbuffer.o ABSOLUTE
    ..\SL_RTE\SL_APP\APP_SoftTimer.c         0x00000000   Number         0  app_softtimer.o ABSOLUTE
    ..\SL_RTE\SL_APP\APP_StateMachine.c      0x00000000   Number         0  app_statemachine.o ABSOLUTE
    ..\SL_RTE\SL_APP\APP_String.c            0x00000000   Number         0  app_string.o ABSOLUTE
    ..\SL_RTE\SL_BSP\BSP_ComF1.c             0x00000000   Number         0  bsp_comf1.o ABSOLUTE
    ..\SL_RTE\SL_BSP\BSP_Key.c               0x00000000   Number         0  bsp_key.o ABSOLUTE
    ..\SL_RTE\SL_BSP\BSP_Led.c               0x00000000   Number         0  bsp_led.o ABSOLUTE
    ..\\SL_RTE\\SL_APP\\APP_Debug.c          0x00000000   Number         0  app_debug.o ABSOLUTE
    ..\\SL_RTE\\SL_APP\\APP_F1.c             0x00000000   Number         0  app_f1.o ABSOLUTE
    ..\\SL_RTE\\SL_APP\\APP_SoftTimer.c      0x00000000   Number         0  app_softtimer.o ABSOLUTE
    ..\\SL_RTE\\SL_BSP\\BSP_ComF1.c          0x00000000   Number         0  bsp_comf1.o ABSOLUTE
    ..\\SL_RTE\\SL_BSP\\BSP_Key.c            0x00000000   Number         0  bsp_key.o ABSOLUTE
    ..\\SL_RTE\\SL_BSP\\BSP_Led.c            0x00000000   Number         0  bsp_led.o ABSOLUTE
    C:\Profession\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS2\RTX\Source\rtx_lib.c 0x00000000   Number         0  rtx_lib.o ABSOLUTE
    C:\Profession\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.2.0\Device\StdPeriph_Driver\src\misc.c 0x00000000   Number         0  misc.o ABSOLUTE
    C:\Profession\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.2.0\Device\StdPeriph_Driver\src\stm32f10x_dma.c 0x00000000   Number         0  stm32f10x_dma.o ABSOLUTE
    C:\Profession\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.2.0\Device\StdPeriph_Driver\src\stm32f10x_gpio.c 0x00000000   Number         0  stm32f10x_gpio.o ABSOLUTE
    C:\Profession\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.2.0\Device\StdPeriph_Driver\src\stm32f10x_rcc.c 0x00000000   Number         0  stm32f10x_rcc.o ABSOLUTE
    C:\Profession\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.2.0\Device\StdPeriph_Driver\src\stm32f10x_usart.c 0x00000000   Number         0  stm32f10x_usart.o ABSOLUTE
    C:\\Profession\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\5.3.0\\CMSIS\\RTOS2\\RTX\\Source\\rtx_lib.c 0x00000000   Number         0  rtx_lib.o ABSOLUTE
    C:\\Profession\\Keil_v5\\ARM\\PACK\\Keil\\STM32F1xx_DFP\\2.2.0\\Device\\StdPeriph_Driver\\src\\misc.c 0x00000000   Number         0  misc.o ABSOLUTE
    C:\\Profession\\Keil_v5\\ARM\\PACK\\Keil\\STM32F1xx_DFP\\2.2.0\\Device\\StdPeriph_Driver\\src\\stm32f10x_dma.c 0x00000000   Number         0  stm32f10x_dma.o ABSOLUTE
    C:\\Profession\\Keil_v5\\ARM\\PACK\\Keil\\STM32F1xx_DFP\\2.2.0\\Device\\StdPeriph_Driver\\src\\stm32f10x_gpio.c 0x00000000   Number         0  stm32f10x_gpio.o ABSOLUTE
    C:\\Profession\\Keil_v5\\ARM\\PACK\\Keil\\STM32F1xx_DFP\\2.2.0\\Device\\StdPeriph_Driver\\src\\stm32f10x_rcc.c 0x00000000   Number         0  stm32f10x_rcc.o ABSOLUTE
    C:\\Profession\\Keil_v5\\ARM\\PACK\\Keil\\STM32F1xx_DFP\\2.2.0\\Device\\StdPeriph_Driver\\src\\stm32f10x_usart.c 0x00000000   Number         0  stm32f10x_usart.o ABSOLUTE
    RTE\CMSIS\RTX_Config.c                   0x00000000   Number         0  rtx_config.o ABSOLUTE
    RTE\Device\STM32F103C8\startup_stm32f10x_md.s 0x00000000   Number         0  startup_stm32f10x_md.o ABSOLUTE
    RTE\Device\STM32F103C8\system_stm32f10x.c 0x00000000   Number         0  system_stm32f10x.o ABSOLUTE
    RTE\\CMSIS\\RTX_Config.c                 0x00000000   Number         0  rtx_config.o ABSOLUTE
    RTE\\Device\\STM32F103C8\\system_stm32f10x.c 0x00000000   Number         0  system_stm32f10x.o ABSOLUTE
    cdrcmple.s                               0x00000000   Number         0  cdrcmple.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    handlers.s                               0x00000000   Number         0  handlers.o ABSOLUTE
    init.s                                   0x00000000   Number         0  init.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    os_systick.c                             0x00000000   Number         0  os_systick.o ABSOLUTE
    rtx_delay.c                              0x00000000   Number         0  rtx_delay.o ABSOLUTE
    rtx_kernel.c                             0x00000000   Number         0  rtx_kernel.o ABSOLUTE
    rtx_memory.c                             0x00000000   Number         0  rtx_memory.o ABSOLUTE
    rtx_mempool.c                            0x00000000   Number         0  rtx_mempool.o ABSOLUTE
    rtx_mutex.c                              0x00000000   Number         0  rtx_mutex.o ABSOLUTE
    rtx_system.c                             0x00000000   Number         0  rtx_system.o ABSOLUTE
    rtx_thread.c                             0x00000000   Number         0  rtx_thread.o ABSOLUTE
    stm32f10x_it.c                           0x00000000   Number         0  stm32f10x_it.o ABSOLUTE
    stm32f10x_it.c                           0x00000000   Number         0  stm32f10x_it.o ABSOLUTE
    RESET                                    0x08000000   Section      236  startup_stm32f10x_md.o(RESET)
    .ARM.Collect$$$$00000000                 0x080000ec   Section        0  entry.o(.ARM.Collect$$$$00000000)
    .ARM.Collect$$$$00000001                 0x080000ec   Section        4  entry2.o(.ARM.Collect$$$$00000001)
    .ARM.Collect$$$$00000004                 0x080000f0   Section        4  entry5.o(.ARM.Collect$$$$00000004)
    .ARM.Collect$$$$00000008                 0x080000f4   Section        0  entry7b.o(.ARM.Collect$$$$00000008)
    .ARM.Collect$$$$0000000A                 0x080000f4   Section        0  entry8b.o(.ARM.Collect$$$$0000000A)
    .ARM.Collect$$$$0000000B                 0x080000f4   Section        8  entry9a.o(.ARM.Collect$$$$0000000B)
    .ARM.Collect$$$$0000000D                 0x080000fc   Section        0  entry10a.o(.ARM.Collect$$$$0000000D)
    .ARM.Collect$$$$0000000F                 0x080000fc   Section        0  entry11a.o(.ARM.Collect$$$$0000000F)
    .ARM.Collect$$$$00002712                 0x080000fc   Section        4  entry2.o(.ARM.Collect$$$$00002712)
    __lit__00000000                          0x080000fc   Data           4  entry2.o(.ARM.Collect$$$$00002712)
    .text                                    0x08000100   Section       36  startup_stm32f10x_md.o(.text)
    .text                                    0x08000124   Section      148  irq_cm3.o(.text)
    .text                                    0x080001b8   Section        0  memcpya.o(.text)
    .text                                    0x080001dc   Section        0  memseta.o(.text)
    .text                                    0x08000200   Section        0  strcmp.o(.text)
    .text                                    0x0800021c   Section        0  uidiv.o(.text)
    .text                                    0x08000248   Section       36  init.o(.text)
    .text                                    0x0800026c   Section        0  __dczerorl2.o(.text)
    [Anonymous Symbol]                       0x080002c4   Section        0  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    __arm_cp.3_0                             0x080002cc   Number         4  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    [Anonymous Symbol]                       0x080002d0   Section        0  os_systick.o(.text.OS_Tick_Enable)
    __arm_cp.1_0                             0x080002f0   Number         4  os_systick.o(.text.OS_Tick_Enable)
    __arm_cp.1_1                             0x080002f4   Number         4  os_systick.o(.text.OS_Tick_Enable)
    __arm_cp.1_2                             0x080002f8   Number         4  os_systick.o(.text.OS_Tick_Enable)
    [Anonymous Symbol]                       0x080002fc   Section        0  os_systick.o(.text.OS_Tick_GetIRQn)
    [Anonymous Symbol]                       0x08000304   Section        0  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_0                             0x08000334   Number         4  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_1                             0x08000338   Number         4  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_2                             0x0800033c   Number         4  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_3                             0x08000340   Number         4  os_systick.o(.text.OS_Tick_Setup)
    [Anonymous Symbol]                       0x08000344   Section        0  rtx_thread.o(.text.ThreadFlagsCheck)
    ThreadFlagsCheck                         0x08000345   Thumb Code   106  rtx_thread.o(.text.ThreadFlagsCheck)
    [Anonymous Symbol]                       0x080003b0   Section        0  rtx_delay.o(.text.osDelay)
    __arm_cp.0_0                             0x080003d0   Number         4  rtx_delay.o(.text.osDelay)
    [Anonymous Symbol]                       0x080003d4   Section        0  rtx_kernel.o(.text.osKernelInitialize)
    __arm_cp.0_0                             0x080003f4   Number         4  rtx_kernel.o(.text.osKernelInitialize)
    [Anonymous Symbol]                       0x080003f8   Section        0  rtx_kernel.o(.text.osKernelStart)
    __arm_cp.5_0                             0x08000418   Number         4  rtx_kernel.o(.text.osKernelStart)
    [Anonymous Symbol]                       0x0800041c   Section        0  rtx_memory.o(.text.osRtxMemoryAlloc)
    [Anonymous Symbol]                       0x0800049c   Section        0  rtx_memory.o(.text.osRtxMemoryFree)
    [Anonymous Symbol]                       0x080004ee   Section        0  rtx_memory.o(.text.osRtxMemoryInit)
    [Anonymous Symbol]                       0x08000524   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    [Anonymous Symbol]                       0x0800056e   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    [Anonymous Symbol]                       0x080005c4   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    [Anonymous Symbol]                       0x08000618   Section        0  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    [Anonymous Symbol]                       0x0800065c   Section        0  rtx_system.o(.text.osRtxPendSV_Handler)
    __arm_cp.1_0                             0x080006e8   Number         4  rtx_system.o(.text.osRtxPendSV_Handler)
    [Anonymous Symbol]                       0x080006ec   Section        0  rtx_thread.o(.text.osRtxThreadBlock)
    osRtxThreadBlock                         0x080006ed   Thumb Code    56  rtx_thread.o(.text.osRtxThreadBlock)
    __arm_cp.10_0                            0x08000720   Number         4  rtx_thread.o(.text.osRtxThreadBlock)
    [Anonymous Symbol]                       0x08000724   Section        0  rtx_thread.o(.text.osRtxThreadDelayInsert)
    osRtxThreadDelayInsert                   0x08000725   Thumb Code   148  rtx_thread.o(.text.osRtxThreadDelayInsert)
    __arm_cp.14_0                            0x080007b4   Number         4  rtx_thread.o(.text.osRtxThreadDelayInsert)
    [Anonymous Symbol]                       0x080007b8   Section        0  rtx_thread.o(.text.osRtxThreadDelayRemove)
    osRtxThreadDelayRemove                   0x080007b9   Thumb Code    88  rtx_thread.o(.text.osRtxThreadDelayRemove)
    __arm_cp.12_0                            0x0800080c   Number         4  rtx_thread.o(.text.osRtxThreadDelayRemove)
    [Anonymous Symbol]                       0x08000810   Section        0  rtx_thread.o(.text.osRtxThreadDelayTick)
    __arm_cp.5_0                             0x08000844   Number         4  rtx_thread.o(.text.osRtxThreadDelayTick)
    [Anonymous Symbol]                       0x08000848   Section        0  rtx_thread.o(.text.osRtxThreadDispatch)
    __arm_cp.9_0                             0x080008a4   Number         4  rtx_thread.o(.text.osRtxThreadDispatch)
    [Anonymous Symbol]                       0x080008a8   Section        0  rtx_thread.o(.text.osRtxThreadFree)
    osRtxThreadFree                          0x080008a9   Thumb Code    88  rtx_thread.o(.text.osRtxThreadFree)
    __arm_cp.52_0                            0x080008fc   Number         4  rtx_thread.o(.text.osRtxThreadFree)
    [Anonymous Symbol]                       0x08000900   Section        0  rtx_thread.o(.text.osRtxThreadListGet)
    [Anonymous Symbol]                       0x08000916   Section        0  rtx_thread.o(.text.osRtxThreadListPut)
    [Anonymous Symbol]                       0x0800094e   Section        0  rtx_thread.o(.text.osRtxThreadListRemove)
    [Anonymous Symbol]                       0x08000962   Section        0  rtx_thread.o(.text.osRtxThreadPostProcess)
    osRtxThreadPostProcess                   0x08000963   Thumb Code    42  rtx_thread.o(.text.osRtxThreadPostProcess)
    [Anonymous Symbol]                       0x0800098c   Section        0  rtx_thread.o(.text.osRtxThreadReadyPut)
    __arm_cp.4_0                             0x0800099c   Number         4  rtx_thread.o(.text.osRtxThreadReadyPut)
    [Anonymous Symbol]                       0x080009a0   Section        0  rtx_thread.o(.text.osRtxThreadStackCheck)
    __arm_cp.8_0                             0x080009c0   Number         4  rtx_thread.o(.text.osRtxThreadStackCheck)
    __arm_cp.8_1                             0x080009c4   Number         4  rtx_thread.o(.text.osRtxThreadStackCheck)
    [Anonymous Symbol]                       0x080009c8   Section        0  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.15_0                            0x08000a10   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.15_1                            0x08000a14   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.15_2                            0x08000a18   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.15_3                            0x08000a1c   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    [Anonymous Symbol]                       0x08000a20   Section        0  rtx_thread.o(.text.osRtxThreadSwitch)
    __arm_cp.7_0                             0x08000a2c   Number         4  rtx_thread.o(.text.osRtxThreadSwitch)
    [Anonymous Symbol]                       0x08000a30   Section        0  rtx_thread.o(.text.osRtxThreadWaitEnter)
    __arm_cp.13_0                            0x08000a64   Number         4  rtx_thread.o(.text.osRtxThreadWaitEnter)
    [Anonymous Symbol]                       0x08000a68   Section        0  rtx_thread.o(.text.osRtxThreadWaitExit)
    [Anonymous Symbol]                       0x08000a8c   Section        0  rtx_system.o(.text.osRtxTick_Handler)
    __arm_cp.0_0                             0x08000af8   Number         4  rtx_system.o(.text.osRtxTick_Handler)
    [Anonymous Symbol]                       0x08000afc   Section        0  rtx_thread.o(.text.osThreadExit)
    __arm_cp.30_0                            0x08000b04   Number         4  rtx_thread.o(.text.osThreadExit)
    [Anonymous Symbol]                       0x08000b08   Section        0  rtx_thread.o(.text.osThreadNew)
    __arm_cp.17_0                            0x08000b28   Number         4  rtx_thread.o(.text.osThreadNew)
    [Anonymous Symbol]                       0x08000b2c   Section        0  rtx_delay.o(.text.svcRtxDelay)
    svcRtxDelay                              0x08000b2d   Thumb Code    20  rtx_delay.o(.text.svcRtxDelay)
    [Anonymous Symbol]                       0x08000b40   Section        0  rtx_kernel.o(.text.svcRtxKernelInitialize)
    svcRtxKernelInitialize                   0x08000b41   Thumb Code   376  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.19_0                            0x08000cac   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.19_1                            0x08000cb0   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.19_2                            0x08000cb4   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    [Anonymous Symbol]                       0x08000cb8   Section        0  rtx_kernel.o(.text.svcRtxKernelStart)
    svcRtxKernelStart                        0x08000cb9   Thumb Code   140  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.20_0                            0x08000d34   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.20_1                            0x08000d38   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.20_2                            0x08000d3c   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.20_3                            0x08000d40   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    [Anonymous Symbol]                       0x08000d44   Section        0  rtx_thread.o(.text.svcRtxThreadExit)
    svcRtxThreadExit                         0x08000d45   Thumb Code   104  rtx_thread.o(.text.svcRtxThreadExit)
    __arm_cp.54_0                            0x08000da8   Number         4  rtx_thread.o(.text.svcRtxThreadExit)
    [Anonymous Symbol]                       0x08000dac   Section        0  rtx_thread.o(.text.svcRtxThreadNew)
    svcRtxThreadNew                          0x08000dad   Thumb Code   480  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_0                            0x08000f78   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_1                            0x08000f7c   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_2                            0x08000f80   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_3                            0x08000f84   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_4                            0x08000f88   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    i.APP_Assert                             0x08000f8c   Section        0  app_f1.o(i.APP_Assert)
    i.APP_BGet                               0x08000fc8   Section        0  app_bget.o(i.APP_BGet)
    i.APP_BGet_AllocSize                     0x080010f4   Section        0  app_bget.o(i.APP_BGet_AllocSize)
    i.APP_BGet_Init                          0x08001108   Section        0  app_bget.o(i.APP_BGet_Init)
    i.APP_BGet_TotalSize                     0x08001194   Section        0  app_bget.o(i.APP_BGet_TotalSize)
    i.APP_BGetz                              0x080011a8   Section        0  app_bget.o(i.APP_BGetz)
    i.APP_Debug_Init                         0x08001204   Section        0  app_debug.o(i.APP_Debug_Init)
    i.APP_Debug_Poll                         0x08001248   Section        0  app_debug.o(i.APP_Debug_Poll)
    i.APP_MessageQuene_In                    0x080012cc   Section        0  app_ringbuffer.o(i.APP_MessageQuene_In)
    i.APP_MessageQuene_Init                  0x080013b8   Section        0  app_ringbuffer.o(i.APP_MessageQuene_Init)
    i.APP_MessageQuene_Out                   0x080013de   Section        0  app_ringbuffer.o(i.APP_MessageQuene_Out)
    i.APP_RunEnvInit                         0x08001514   Section        0  app_f1.o(i.APP_RunEnvInit)
    i.APP_SoftTimer_Create                   0x0800155c   Section        0  app_softtimer.o(i.APP_SoftTimer_Create)
    i.APP_SoftTimer_Init                     0x08001594   Section        0  app_softtimer.o(i.APP_SoftTimer_Init)
    i.APP_SoftTimer_Resume                   0x080015d0   Section        0  app_softtimer.o(i.APP_SoftTimer_Resume)
    i.APP_SoftTimer_TickHanlder              0x080015f4   Section        0  app_softtimer.o(i.APP_SoftTimer_TickHanlder)
    i.BSP_LED_Init                           0x08001664   Section        0  bsp_led.o(i.BSP_LED_Init)
    i.BSP_LED_Toggle                         0x080016c0   Section        0  bsp_led.o(i.BSP_LED_Toggle)
    i.BSP_USART_Init                         0x080016dc   Section        0  bsp_comf1.o(i.BSP_USART_Init)
    i.BSP_USART_Putc                         0x08001844   Section        0  bsp_comf1.o(i.BSP_USART_Putc)
    i.BSP_USART_RecCallback                  0x08001884   Section        0  bsp_comf1.o(i.BSP_USART_RecCallback)
    BSP_USART_RecCallback                    0x08001885   Thumb Code    92  bsp_comf1.o(i.BSP_USART_RecCallback)
    i.BSP_USART_ReturnQue                    0x080018e4   Section        0  bsp_comf1.o(i.BSP_USART_ReturnQue)
    i.BusFault_Handler                       0x080018fc   Section        0  stm32f10x_it.o(i.BusFault_Handler)
    i.CMD_MEMInfor                           0x08001900   Section        0  app_debug.o(i.CMD_MEMInfor)
    i.CMD_help                               0x0800193c   Section        0  app_debug.o(i.CMD_help)
    i.CmdLineProcess                         0x0800199c   Section        0  app_cmdline.o(i.CmdLineProcess)
    i.DMA_Cmd                                0x08001a0c   Section        0  stm32f10x_dma.o(i.DMA_Cmd)
    i.DMA_DeInit                             0x08001a20   Section        0  stm32f10x_dma.o(i.DMA_DeInit)
    i.DMA_Init                               0x08001b24   Section        0  stm32f10x_dma.o(i.DMA_Init)
    i.DebugMon_Handler                       0x08001b76   Section        0  stm32f10x_it.o(i.DebugMon_Handler)
    i.GPIO_Init                              0x08001b78   Section        0  stm32f10x_gpio.o(i.GPIO_Init)
    i.GPIO_ResetBits                         0x08001c26   Section        0  stm32f10x_gpio.o(i.GPIO_ResetBits)
    i.GPIO_SetBits                           0x08001c2a   Section        0  stm32f10x_gpio.o(i.GPIO_SetBits)
    i.HardFault_Handler                      0x08001c2e   Section        0  stm32f10x_it.o(i.HardFault_Handler)
    i.LEDTimer_Callback                      0x08001c30   Section        0  main.o(i.LEDTimer_Callback)
    LEDTimer_Callback                        0x08001c31   Thumb Code     6  main.o(i.LEDTimer_Callback)
    i.MemManage_Handler                      0x08001c36   Section        0  stm32f10x_it.o(i.MemManage_Handler)
    i.NMI_Handler                            0x08001c38   Section        0  stm32f10x_it.o(i.NMI_Handler)
    i.NVIC_Init                              0x08001c3c   Section        0  misc.o(i.NVIC_Init)
    i.RCC_AHBPeriphClockCmd                  0x08001cb0   Section        0  stm32f10x_rcc.o(i.RCC_AHBPeriphClockCmd)
    i.RCC_APB1PeriphClockCmd                 0x08001cc8   Section        0  stm32f10x_rcc.o(i.RCC_APB1PeriphClockCmd)
    i.RCC_APB1PeriphResetCmd                 0x08001ce0   Section        0  stm32f10x_rcc.o(i.RCC_APB1PeriphResetCmd)
    i.RCC_APB2PeriphClockCmd                 0x08001cf8   Section        0  stm32f10x_rcc.o(i.RCC_APB2PeriphClockCmd)
    i.RCC_APB2PeriphResetCmd                 0x08001d10   Section        0  stm32f10x_rcc.o(i.RCC_APB2PeriphResetCmd)
    i.RCC_GetClocksFreq                      0x08001d28   Section        0  stm32f10x_rcc.o(i.RCC_GetClocksFreq)
    i.SysTimer_Callback                      0x08001dd4   Section        0  app_f1.o(i.SysTimer_Callback)
    SysTimer_Callback                        0x08001dd5   Thumb Code     4  app_f1.o(i.SysTimer_Callback)
    i.SystemCoreClockUpdate                  0x08001dd8   Section        0  system_stm32f10x.o(i.SystemCoreClockUpdate)
    i.SystemInit                             0x08001e48   Section        0  system_stm32f10x.o(i.SystemInit)
    i.SystemThread                           0x08001f38   Section        0  main.o(i.SystemThread)
    i.USART1_IRQHandler                      0x08001f78   Section        0  bsp_comf1.o(i.USART1_IRQHandler)
    i.USART2_IRQHandler                      0x08001f98   Section        0  bsp_comf1.o(i.USART2_IRQHandler)
    i.USART_ClearFlag                        0x08001fb8   Section        0  stm32f10x_usart.o(i.USART_ClearFlag)
    i.USART_ClearITPendingBit                0x08001fbe   Section        0  stm32f10x_usart.o(i.USART_ClearITPendingBit)
    i.USART_Cmd                              0x08001fcc   Section        0  stm32f10x_usart.o(i.USART_Cmd)
    i.USART_DMACmd                           0x08001fde   Section        0  stm32f10x_usart.o(i.USART_DMACmd)
    i.USART_DeInit                           0x08001fee   Section        0  stm32f10x_usart.o(i.USART_DeInit)
    i.USART_GetITStatus                      0x08002092   Section        0  stm32f10x_usart.o(i.USART_GetITStatus)
    i.USART_ITConfig                         0x080020de   Section        0  stm32f10x_usart.o(i.USART_ITConfig)
    i.USART_Init                             0x08002110   Section        0  stm32f10x_usart.o(i.USART_Init)
    i.UsageFault_Handler                     0x080021c4   Section        0  stm32f10x_it.o(i.UsageFault_Handler)
    i.__0printf$6                            0x080021c8   Section        0  printf6.o(i.__0printf$6)
    i.__scatterload_copy                     0x080021e8   Section       14  handlers.o(i.__scatterload_copy)
    i.__scatterload_null                     0x080021f6   Section        2  handlers.o(i.__scatterload_null)
    i.__scatterload_zeroinit                 0x080021f8   Section       14  handlers.o(i.__scatterload_zeroinit)
    i._printf_core                           0x08002208   Section        0  printf6.o(i._printf_core)
    _printf_core                             0x08002209   Thumb Code   748  printf6.o(i._printf_core)
    i._printf_post_padding                   0x080024f8   Section        0  printf6.o(i._printf_post_padding)
    _printf_post_padding                     0x080024f9   Thumb Code    36  printf6.o(i._printf_post_padding)
    i._printf_pre_padding                    0x0800251c   Section        0  printf6.o(i._printf_pre_padding)
    _printf_pre_padding                      0x0800251d   Thumb Code    46  printf6.o(i._printf_pre_padding)
    i.bpool                                  0x0800254c   Section        0  app_bget.o(i.bpool)
    i.fputc                                  0x080025d0   Section        0  app_f1.o(i.fputc)
    i.main                                   0x080025ec   Section        0  main.o(i.main)
    i.osRtxErrorNotify                       0x0800260c   Section        0  rtx_config.o(i.osRtxErrorNotify)
    i.osRtxIdleThread                        0x0800260e   Section        0  rtx_config.o(i.osRtxIdleThread)
    i.osRtxTimerThread                       0x08002610   Section        0  rtx_lib.o(i.osRtxTimerThread)
    .constdata                               0x08002614   Section       36  main.o(.constdata)
    .constdata                               0x08002638   Section       36  rtx_lib.o(.constdata)
    os_idle_thread_attr                      0x08002638   Data          36  rtx_lib.o(.constdata)
    .constdata                               0x0800265c   Section        4  rtx_lib.o(.constdata)
    .conststring                             0x08002660   Section       69  app_debug.o(.conststring)
    .rodata                                  0x080026a8   Section      104  rtx_lib.o(.rodata)
    __tagsym$$used                           0x080026a8   Number         0  rtx_lib.o(.rodata)
    [Anonymous Symbol]                       0x08002710   Section        0  rtx_kernel.o(.rodata.str1.4)
    .L.str                                   0x08002710   Data          11  rtx_kernel.o(.rodata.str1.4)
    .bss.os                                  0x20000000   Section     4096  rtx_lib.o(.bss.os)
    os_mem                                   0x20000000   Data        4096  rtx_lib.o(.bss.os)
    .bss.os                                  0x20001000   Section       64  rtx_lib.o(.bss.os)
    os_isr_queue                             0x20001000   Data          64  rtx_lib.o(.bss.os)
    .bss.os.thread.cb                        0x20001040   Section       68  rtx_lib.o(.bss.os.thread.cb)
    os_thread_cb                             0x20001040   Data          68  rtx_lib.o(.bss.os.thread.cb)
    .bss.os.thread.cb                        0x20001084   Section       68  rtx_lib.o(.bss.os.thread.cb)
    os_idle_thread_cb                        0x20001084   Data          68  rtx_lib.o(.bss.os.thread.cb)
    .bss.os.thread.stack                     0x200010c8   Section     2072  rtx_lib.o(.bss.os.thread.stack)
    os_thread_stack                          0x200010c8   Data        2072  rtx_lib.o(.bss.os.thread.stack)
    .bss.os.thread.stack                     0x200018e0   Section      256  rtx_lib.o(.bss.os.thread.stack)
    os_idle_thread_stack                     0x200018e0   Data         256  rtx_lib.o(.bss.os.thread.stack)
    .data                                    0x200019e0   Section        8  app_softtimer.o(.data)
    APPSysRunTime                            0x200019e0   Data           4  app_softtimer.o(.data)
    ticks                                    0x200019e4   Data           4  app_softtimer.o(.data)
    .data                                    0x200019e8   Section       40  app_bget.o(.data)
    APP_BGet_ControlHandle                   0x200019e8   Data          24  app_bget.o(.data)
    freelist                                 0x20001a00   Data          16  app_bget.o(.data)
    .data                                    0x20001a10   Section       40  app_debug.o(.data)
    DebugBuffer                              0x20001a10   Data           4  app_debug.o(.data)
    .data                                    0x20001a38   Section       20  bsp_led.o(.data)
    LedControlArray                          0x20001a38   Data          20  bsp_led.o(.data)
    .data                                    0x20001a4c   Section      152  bsp_comf1.o(.data)
    BSP_USARTControl                         0x20001a4c   Data         152  bsp_comf1.o(.data)
    .data                                    0x20001ae4   Section       20  stm32f10x_rcc.o(.data)
    ADCPrescTable                            0x20001ae4   Data           4  stm32f10x_rcc.o(.data)
    APBAHBPrescTable                         0x20001ae8   Data          16  stm32f10x_rcc.o(.data)
    .data                                    0x20001af8   Section       20  system_stm32f10x.o(.data)
    .data                                    0x20001b0c   Section        4  stdout.o(.data)
    .data.os.thread.mpi                      0x20001bb4   Section       24  rtx_lib.o(.data.os.thread.mpi)
    os_mpi_thread                            0x20001bb4   Data          24  rtx_lib.o(.data.os.thread.mpi)
    .bss                                     0x20001bcc   Section       40  app_softtimer.o(.bss)
    TimerHandlers                            0x20001bcc   Data          40  app_softtimer.o(.bss)
    .bss                                     0x20001bf4   Section     1024  app_bget.o(.bss)
    .bss                                     0x20001ff4   Section       36  app_cmdline.o(.bss)
    g_ppcArgv                                0x20001ff4   Data          36  app_cmdline.o(.bss)
    [Anonymous Symbol]                       0x20002018   Section        0  os_systick.o(.bss.PendST)
    PendST                                   0x20002018   Data           1  os_systick.o(.bss.PendST)
    STACK                                    0x20002020   Section     1024  startup_stm32f10x_md.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$P$D$K$B$S$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __ARM_use_no_argv                        0x00000000   Number         0  main.o ABSOLUTE
    _printf_a                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_c                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_charcount                        0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_d                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_e                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_f                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_flags                            0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_fp_dec                           0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_fp_hex                           0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_g                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_i                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_int_dec                          0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_l                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_lc                               0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_ll                               0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_lld                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_lli                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_llo                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_llu                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_llx                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_longlong_dec                     0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_longlong_hex                     0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_longlong_oct                     0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_ls                               0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_mbtowc                           0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_n                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_o                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_p                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_percent                          0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_pre_padding                      0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_return_value                     0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_s                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_sizespec                         0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_str                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_truncate_signed                  0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_truncate_unsigned                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_u                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_wc                               0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_wctomb                           0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_widthprec                        0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_x                                0x00000000   Number         0  stubs.o ABSOLUTE
    .bss.os.evflags.cb$$Base                  - Undefined Weak Reference
    .bss.os.evflags.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mempool.cb$$Base                  - Undefined Weak Reference
    .bss.os.mempool.cb$$Limit                 - Undefined Weak Reference
    .bss.os.msgqueue.cb$$Base                 - Undefined Weak Reference
    .bss.os.msgqueue.cb$$Limit                - Undefined Weak Reference
    .bss.os.mutex.cb$$Base                    - Undefined Weak Reference
    .bss.os.mutex.cb$$Limit                   - Undefined Weak Reference
    .bss.os.semaphore.cb$$Base                - Undefined Weak Reference
    .bss.os.semaphore.cb$$Limit               - Undefined Weak Reference
    .bss.os.timer.cb$$Base                    - Undefined Weak Reference
    .bss.os.timer.cb$$Limit                   - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _microlib_exit                            - Undefined Weak Reference
    __Vectors_Size                           0x000000ec   Number         0  startup_stm32f10x_md.o ABSOLUTE
    __Vectors                                0x08000000   Data           4  startup_stm32f10x_md.o(RESET)
    __Vectors_End                            0x080000ec   Data           0  startup_stm32f10x_md.o(RESET)
    __main                                   0x080000ed   Thumb Code     0  entry.o(.ARM.Collect$$$$00000000)
    _main_stk                                0x080000ed   Thumb Code     0  entry2.o(.ARM.Collect$$$$00000001)
    _main_scatterload                        0x080000f1   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    __main_after_scatterload                 0x080000f5   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    _main_clock                              0x080000f5   Thumb Code     0  entry7b.o(.ARM.Collect$$$$00000008)
    _main_cpp_init                           0x080000f5   Thumb Code     0  entry8b.o(.ARM.Collect$$$$0000000A)
    _main_init                               0x080000f5   Thumb Code     0  entry9a.o(.ARM.Collect$$$$0000000B)
    __rt_final_cpp                           0x080000fd   Thumb Code     0  entry10a.o(.ARM.Collect$$$$0000000D)
    __rt_final_exit                          0x080000fd   Thumb Code     0  entry11a.o(.ARM.Collect$$$$0000000F)
    Reset_Handler                            0x08000101   Thumb Code     8  startup_stm32f10x_md.o(.text)
    ADC1_2_IRQHandler                        0x0800011b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    CAN1_RX1_IRQHandler                      0x0800011b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    CAN1_SCE_IRQHandler                      0x0800011b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel1_IRQHandler                 0x0800011b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel2_IRQHandler                 0x0800011b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel3_IRQHandler                 0x0800011b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel4_IRQHandler                 0x0800011b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel5_IRQHandler                 0x0800011b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel6_IRQHandler                 0x0800011b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel7_IRQHandler                 0x0800011b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI0_IRQHandler                         0x0800011b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI15_10_IRQHandler                     0x0800011b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI1_IRQHandler                         0x0800011b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI2_IRQHandler                         0x0800011b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI3_IRQHandler                         0x0800011b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI4_IRQHandler                         0x0800011b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI9_5_IRQHandler                       0x0800011b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    FLASH_IRQHandler                         0x0800011b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    I2C1_ER_IRQHandler                       0x0800011b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    I2C1_EV_IRQHandler                       0x0800011b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    I2C2_ER_IRQHandler                       0x0800011b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    I2C2_EV_IRQHandler                       0x0800011b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    PVD_IRQHandler                           0x0800011b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    RCC_IRQHandler                           0x0800011b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    RTCAlarm_IRQHandler                      0x0800011b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    RTC_IRQHandler                           0x0800011b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    SPI1_IRQHandler                          0x0800011b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    SPI2_IRQHandler                          0x0800011b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TAMPER_IRQHandler                        0x0800011b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM1_BRK_IRQHandler                      0x0800011b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM1_CC_IRQHandler                       0x0800011b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM1_TRG_COM_IRQHandler                  0x0800011b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM1_UP_IRQHandler                       0x0800011b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM2_IRQHandler                          0x0800011b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM3_IRQHandler                          0x0800011b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM4_IRQHandler                          0x0800011b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    USART3_IRQHandler                        0x0800011b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    USBWakeUp_IRQHandler                     0x0800011b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    USB_HP_CAN1_TX_IRQHandler                0x0800011b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    USB_LP_CAN1_RX0_IRQHandler               0x0800011b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    WWDG_IRQHandler                          0x0800011b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    SVC_Handler                              0x08000125   Thumb Code   108  irq_cm3.o(.text)
    PendSV_Handler                           0x08000191   Thumb Code    16  irq_cm3.o(.text)
    SysTick_Handler                          0x080001a1   Thumb Code    16  irq_cm3.o(.text)
    __aeabi_memcpy                           0x080001b9   Thumb Code    36  memcpya.o(.text)
    __aeabi_memcpy4                          0x080001b9   Thumb Code     0  memcpya.o(.text)
    __aeabi_memcpy8                          0x080001b9   Thumb Code     0  memcpya.o(.text)
    __aeabi_memset                           0x080001dd   Thumb Code    14  memseta.o(.text)
    __aeabi_memset4                          0x080001dd   Thumb Code     0  memseta.o(.text)
    __aeabi_memset8                          0x080001dd   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr                           0x080001eb   Thumb Code     4  memseta.o(.text)
    __aeabi_memclr4                          0x080001eb   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr8                          0x080001eb   Thumb Code     0  memseta.o(.text)
    _memset$wrapper                          0x080001ef   Thumb Code    18  memseta.o(.text)
    strcmp                                   0x08000201   Thumb Code    28  strcmp.o(.text)
    __aeabi_uidiv                            0x0800021d   Thumb Code     0  uidiv.o(.text)
    __aeabi_uidivmod                         0x0800021d   Thumb Code    44  uidiv.o(.text)
    __scatterload                            0x08000249   Thumb Code    28  init.o(.text)
    __scatterload_rt2                        0x08000249   Thumb Code     0  init.o(.text)
    __decompress                             0x0800026d   Thumb Code     0  __dczerorl2.o(.text)
    __decompress1                            0x0800026d   Thumb Code    86  __dczerorl2.o(.text)
    OS_Tick_AcknowledgeIRQ                   0x080002c5   Thumb Code    12  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    OS_Tick_Enable                           0x080002d1   Thumb Code    44  os_systick.o(.text.OS_Tick_Enable)
    OS_Tick_GetIRQn                          0x080002fd   Thumb Code     6  os_systick.o(.text.OS_Tick_GetIRQn)
    OS_Tick_Setup                            0x08000305   Thumb Code    64  os_systick.o(.text.OS_Tick_Setup)
    osDelay                                  0x080003b1   Thumb Code    36  rtx_delay.o(.text.osDelay)
    osKernelInitialize                       0x080003d5   Thumb Code    36  rtx_kernel.o(.text.osKernelInitialize)
    osKernelStart                            0x080003f9   Thumb Code    36  rtx_kernel.o(.text.osKernelStart)
    osRtxMemoryAlloc                         0x0800041d   Thumb Code   128  rtx_memory.o(.text.osRtxMemoryAlloc)
    osRtxMemoryFree                          0x0800049d   Thumb Code    82  rtx_memory.o(.text.osRtxMemoryFree)
    osRtxMemoryInit                          0x080004ef   Thumb Code    54  rtx_memory.o(.text.osRtxMemoryInit)
    osRtxMemoryPoolAlloc                     0x08000525   Thumb Code    74  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    osRtxMemoryPoolFree                      0x0800056f   Thumb Code    86  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    osRtxMemoryPoolInit                      0x080005c5   Thumb Code    84  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    osRtxMutexOwnerRelease                   0x08000619   Thumb Code    68  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    osRtxPendSV_Handler                      0x0800065d   Thumb Code   144  rtx_system.o(.text.osRtxPendSV_Handler)
    osRtxThreadDelayTick                     0x08000811   Thumb Code    56  rtx_thread.o(.text.osRtxThreadDelayTick)
    osRtxThreadDispatch                      0x08000849   Thumb Code    96  rtx_thread.o(.text.osRtxThreadDispatch)
    osRtxThreadListGet                       0x08000901   Thumb Code    22  rtx_thread.o(.text.osRtxThreadListGet)
    osRtxThreadListPut                       0x08000917   Thumb Code    56  rtx_thread.o(.text.osRtxThreadListPut)
    osRtxThreadListRemove                    0x0800094f   Thumb Code    20  rtx_thread.o(.text.osRtxThreadListRemove)
    osRtxThreadReadyPut                      0x0800098d   Thumb Code    20  rtx_thread.o(.text.osRtxThreadReadyPut)
    osRtxThreadStackCheck                    0x080009a1   Thumb Code    40  rtx_thread.o(.text.osRtxThreadStackCheck)
    osRtxThreadStartup                       0x080009c9   Thumb Code    88  rtx_thread.o(.text.osRtxThreadStartup)
    osRtxThreadSwitch                        0x08000a21   Thumb Code    16  rtx_thread.o(.text.osRtxThreadSwitch)
    osRtxThreadWaitEnter                     0x08000a31   Thumb Code    56  rtx_thread.o(.text.osRtxThreadWaitEnter)
    osRtxThreadWaitExit                      0x08000a69   Thumb Code    36  rtx_thread.o(.text.osRtxThreadWaitExit)
    osRtxTick_Handler                        0x08000a8d   Thumb Code   112  rtx_system.o(.text.osRtxTick_Handler)
    osThreadExit                             0x08000afd   Thumb Code    12  rtx_thread.o(.text.osThreadExit)
    osThreadNew                              0x08000b09   Thumb Code    36  rtx_thread.o(.text.osThreadNew)
    APP_Assert                               0x08000f8d   Thumb Code    12  app_f1.o(i.APP_Assert)
    APP_BGet                                 0x08000fc9   Thumb Code   264  app_bget.o(i.APP_BGet)
    APP_BGet_AllocSize                       0x080010f5   Thumb Code    14  app_bget.o(i.APP_BGet_AllocSize)
    APP_BGet_Init                            0x08001109   Thumb Code   130  app_bget.o(i.APP_BGet_Init)
    APP_BGet_TotalSize                       0x08001195   Thumb Code    14  app_bget.o(i.APP_BGet_TotalSize)
    APP_BGetz                                0x080011a9   Thumb Code    62  app_bget.o(i.APP_BGetz)
    APP_Debug_Init                           0x08001205   Thumb Code    32  app_debug.o(i.APP_Debug_Init)
    APP_Debug_Poll                           0x08001249   Thumb Code    66  app_debug.o(i.APP_Debug_Poll)
    APP_MessageQuene_In                      0x080012cd   Thumb Code   236  app_ringbuffer.o(i.APP_MessageQuene_In)
    APP_MessageQuene_Init                    0x080013b9   Thumb Code    38  app_ringbuffer.o(i.APP_MessageQuene_Init)
    APP_MessageQuene_Out                     0x080013df   Thumb Code   310  app_ringbuffer.o(i.APP_MessageQuene_Out)
    APP_RunEnvInit                           0x08001515   Thumb Code    64  app_f1.o(i.APP_RunEnvInit)
    APP_SoftTimer_Create                     0x0800155d   Thumb Code    52  app_softtimer.o(i.APP_SoftTimer_Create)
    APP_SoftTimer_Init                       0x08001595   Thumb Code    52  app_softtimer.o(i.APP_SoftTimer_Init)
    APP_SoftTimer_Resume                     0x080015d1   Thumb Code    32  app_softtimer.o(i.APP_SoftTimer_Resume)
    APP_SoftTimer_TickHanlder                0x080015f5   Thumb Code   104  app_softtimer.o(i.APP_SoftTimer_TickHanlder)
    BSP_LED_Init                             0x08001665   Thumb Code    86  bsp_led.o(i.BSP_LED_Init)
    BSP_LED_Toggle                           0x080016c1   Thumb Code    22  bsp_led.o(i.BSP_LED_Toggle)
    BSP_USART_Init                           0x080016dd   Thumb Code   346  bsp_comf1.o(i.BSP_USART_Init)
    BSP_USART_Putc                           0x08001845   Thumb Code    58  bsp_comf1.o(i.BSP_USART_Putc)
    BSP_USART_ReturnQue                      0x080018e5   Thumb Code    18  bsp_comf1.o(i.BSP_USART_ReturnQue)
    BusFault_Handler                         0x080018fd   Thumb Code     2  stm32f10x_it.o(i.BusFault_Handler)
    CMD_MEMInfor                             0x08001901   Thumb Code    30  app_debug.o(i.CMD_MEMInfor)
    CMD_help                                 0x0800193d   Thumb Code    42  app_debug.o(i.CMD_help)
    CmdLineProcess                           0x0800199d   Thumb Code   102  app_cmdline.o(i.CmdLineProcess)
    DMA_Cmd                                  0x08001a0d   Thumb Code    20  stm32f10x_dma.o(i.DMA_Cmd)
    DMA_DeInit                               0x08001a21   Thumb Code   206  stm32f10x_dma.o(i.DMA_DeInit)
    DMA_Init                                 0x08001b25   Thumb Code    82  stm32f10x_dma.o(i.DMA_Init)
    DebugMon_Handler                         0x08001b77   Thumb Code     2  stm32f10x_it.o(i.DebugMon_Handler)
    GPIO_Init                                0x08001b79   Thumb Code   174  stm32f10x_gpio.o(i.GPIO_Init)
    GPIO_ResetBits                           0x08001c27   Thumb Code     4  stm32f10x_gpio.o(i.GPIO_ResetBits)
    GPIO_SetBits                             0x08001c2b   Thumb Code     4  stm32f10x_gpio.o(i.GPIO_SetBits)
    HardFault_Handler                        0x08001c2f   Thumb Code     2  stm32f10x_it.o(i.HardFault_Handler)
    MemManage_Handler                        0x08001c37   Thumb Code     2  stm32f10x_it.o(i.MemManage_Handler)
    NMI_Handler                              0x08001c39   Thumb Code     2  stm32f10x_it.o(i.NMI_Handler)
    NVIC_Init                                0x08001c3d   Thumb Code   112  misc.o(i.NVIC_Init)
    RCC_AHBPeriphClockCmd                    0x08001cb1   Thumb Code    18  stm32f10x_rcc.o(i.RCC_AHBPeriphClockCmd)
    RCC_APB1PeriphClockCmd                   0x08001cc9   Thumb Code    18  stm32f10x_rcc.o(i.RCC_APB1PeriphClockCmd)
    RCC_APB1PeriphResetCmd                   0x08001ce1   Thumb Code    18  stm32f10x_rcc.o(i.RCC_APB1PeriphResetCmd)
    RCC_APB2PeriphClockCmd                   0x08001cf9   Thumb Code    18  stm32f10x_rcc.o(i.RCC_APB2PeriphClockCmd)
    RCC_APB2PeriphResetCmd                   0x08001d11   Thumb Code    18  stm32f10x_rcc.o(i.RCC_APB2PeriphResetCmd)
    RCC_GetClocksFreq                        0x08001d29   Thumb Code   152  stm32f10x_rcc.o(i.RCC_GetClocksFreq)
    SystemCoreClockUpdate                    0x08001dd9   Thumb Code    90  system_stm32f10x.o(i.SystemCoreClockUpdate)
    SystemInit                               0x08001e49   Thumb Code   222  system_stm32f10x.o(i.SystemInit)
    SystemThread                             0x08001f39   Thumb Code    60  main.o(i.SystemThread)
    USART1_IRQHandler                        0x08001f79   Thumb Code    28  bsp_comf1.o(i.USART1_IRQHandler)
    USART2_IRQHandler                        0x08001f99   Thumb Code    28  bsp_comf1.o(i.USART2_IRQHandler)
    USART_ClearFlag                          0x08001fb9   Thumb Code     6  stm32f10x_usart.o(i.USART_ClearFlag)
    USART_ClearITPendingBit                  0x08001fbf   Thumb Code    14  stm32f10x_usart.o(i.USART_ClearITPendingBit)
    USART_Cmd                                0x08001fcd   Thumb Code    18  stm32f10x_usart.o(i.USART_Cmd)
    USART_DMACmd                             0x08001fdf   Thumb Code    16  stm32f10x_usart.o(i.USART_DMACmd)
    USART_DeInit                             0x08001fef   Thumb Code   164  stm32f10x_usart.o(i.USART_DeInit)
    USART_GetITStatus                        0x08002093   Thumb Code    76  stm32f10x_usart.o(i.USART_GetITStatus)
    USART_ITConfig                           0x080020df   Thumb Code    48  stm32f10x_usart.o(i.USART_ITConfig)
    USART_Init                               0x08002111   Thumb Code   174  stm32f10x_usart.o(i.USART_Init)
    UsageFault_Handler                       0x080021c5   Thumb Code     2  stm32f10x_it.o(i.UsageFault_Handler)
    __0printf$6                              0x080021c9   Thumb Code    22  printf6.o(i.__0printf$6)
    __1printf$6                              0x080021c9   Thumb Code     0  printf6.o(i.__0printf$6)
    __2printf                                0x080021c9   Thumb Code     0  printf6.o(i.__0printf$6)
    __scatterload_copy                       0x080021e9   Thumb Code    14  handlers.o(i.__scatterload_copy)
    __scatterload_null                       0x080021f7   Thumb Code     2  handlers.o(i.__scatterload_null)
    __scatterload_zeroinit                   0x080021f9   Thumb Code    14  handlers.o(i.__scatterload_zeroinit)
    bpool                                    0x0800254d   Thumb Code   100  app_bget.o(i.bpool)
    fputc                                    0x080025d1   Thumb Code    28  app_f1.o(i.fputc)
    main                                     0x080025ed   Thumb Code    24  main.o(i.main)
    osRtxErrorNotify                         0x0800260d   Thumb Code     2  rtx_config.o(i.osRtxErrorNotify)
    osRtxIdleThread                          0x0800260f   Thumb Code     2  rtx_config.o(i.osRtxIdleThread)
    osRtxTimerThread                         0x08002611   Thumb Code     2  rtx_lib.o(i.osRtxTimerThread)
    SystemThreadControl                      0x08002614   Data          36  main.o(.constdata)
    osRtxUserSVC                             0x0800265c   Data           4  rtx_lib.o(.constdata)
    osRtxConfig                              0x080026a8   Data         104  rtx_lib.o(.rodata)
    Region$$Table$$Base                      0x0800271c   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x0800273c   Number         0  anon$$obj.o(Region$$Table)
    .bss.os.thread.cb$$Base                  0x20001040   Number         0  rtx_lib.o(.bss.os.thread.cb)
    .bss.os.thread.cb$$Limit                 0x200010c8   Number         0  rtx_lib.o(.bss.os.thread.cb)
    g_psCmdTable                             0x20001a14   Data          36  app_debug.o(.data)
    SystemCoreClock                          0x20001af8   Data           4  system_stm32f10x.o(.data)
    AHBPrescTable                            0x20001afc   Data          16  system_stm32f10x.o(.data)
    __stdout                                 0x20001b0c   Data           4  stdout.o(.data)
    osRtxInfo                                0x20001b10   Data         164  rtx_kernel.o(.data.os)
    RAM_0                                    0x20001bf4   Data        1024  app_bget.o(.bss)
    __initial_sp                             0x20002420   Data           0  startup_stm32f10x_md.o(STACK)



==============================================================================

Memory Map of the image

  Image Entry point : 0x080000ed

  Load Region LR_IROM1 (Base: 0x08000000, Size: 0x00004308, Max: 0x00010000, ABSOLUTE, COMPRESSED[0x000027fc])

    Execution Region ER_IROM1 (Exec base: 0x08000000, Load base: 0x08000000, Size: 0x0000273c, Max: 0x00010000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x08000000   0x000000ec   Data   RO         1625    RESET               startup_stm32f10x_md.o
    0x080000ec   0x080000ec   0x00000000   Code   RO         2046  * .ARM.Collect$$$$00000000  mc_w.l(entry.o)
    0x080000ec   0x080000ec   0x00000004   Code   RO         2328    .ARM.Collect$$$$00000001  mc_w.l(entry2.o)
    0x080000f0   0x080000f0   0x00000004   Code   RO         2331    .ARM.Collect$$$$00000004  mc_w.l(entry5.o)
    0x080000f4   0x080000f4   0x00000000   Code   RO         2333    .ARM.Collect$$$$00000008  mc_w.l(entry7b.o)
    0x080000f4   0x080000f4   0x00000000   Code   RO         2335    .ARM.Collect$$$$0000000A  mc_w.l(entry8b.o)
    0x080000f4   0x080000f4   0x00000008   Code   RO         2336    .ARM.Collect$$$$0000000B  mc_w.l(entry9a.o)
    0x080000fc   0x080000fc   0x00000000   Code   RO         2338    .ARM.Collect$$$$0000000D  mc_w.l(entry10a.o)
    0x080000fc   0x080000fc   0x00000000   Code   RO         2340    .ARM.Collect$$$$0000000F  mc_w.l(entry11a.o)
    0x080000fc   0x080000fc   0x00000004   Code   RO         2329    .ARM.Collect$$$$00002712  mc_w.l(entry2.o)
    0x08000100   0x08000100   0x00000024   Code   RO         1626    .text               startup_stm32f10x_md.o
    0x08000124   0x08000124   0x00000094   Code   RO         1886    .text               RTX_CM3.lib(irq_cm3.o)
    0x080001b8   0x080001b8   0x00000024   Code   RO         2049    .text               mc_w.l(memcpya.o)
    0x080001dc   0x080001dc   0x00000024   Code   RO         2051    .text               mc_w.l(memseta.o)
    0x08000200   0x08000200   0x0000001c   Code   RO         2055    .text               mc_w.l(strcmp.o)
    0x0800021c   0x0800021c   0x0000002c   Code   RO         2343    .text               mc_w.l(uidiv.o)
    0x08000248   0x08000248   0x00000024   Code   RO         2360    .text               mc_w.l(init.o)
    0x0800026c   0x0800026c   0x00000056   Code   RO         2378    .text               mc_w.l(__dczerorl2.o)
    0x080002c2   0x080002c2   0x00000002   PAD
    0x080002c4   0x080002c4   0x0000000c   Code   RO         2023    .text.OS_Tick_AcknowledgeIRQ  RTX_CM3.lib(os_systick.o)
    0x080002d0   0x080002d0   0x0000002c   Code   RO         2019    .text.OS_Tick_Enable  RTX_CM3.lib(os_systick.o)
    0x080002fc   0x080002fc   0x00000006   Code   RO         2025    .text.OS_Tick_GetIRQn  RTX_CM3.lib(os_systick.o)
    0x08000302   0x08000302   0x00000002   PAD
    0x08000304   0x08000304   0x00000040   Code   RO         2017    .text.OS_Tick_Setup  RTX_CM3.lib(os_systick.o)
    0x08000344   0x08000344   0x0000006a   Code   RO         1810    .text.ThreadFlagsCheck  RTX_CM3.lib(rtx_thread.o)
    0x080003ae   0x080003ae   0x00000002   PAD
    0x080003b0   0x080003b0   0x00000024   Code   RO         1867    .text.osDelay       RTX_CM3.lib(rtx_delay.o)
    0x080003d4   0x080003d4   0x00000024   Code   RO         1667    .text.osKernelInitialize  RTX_CM3.lib(rtx_kernel.o)
    0x080003f8   0x080003f8   0x00000024   Code   RO         1677    .text.osKernelStart  RTX_CM3.lib(rtx_kernel.o)
    0x0800041c   0x0800041c   0x00000080   Code   RO         1930    .text.osRtxMemoryAlloc  RTX_CM3.lib(rtx_memory.o)
    0x0800049c   0x0800049c   0x00000052   Code   RO         1932    .text.osRtxMemoryFree  RTX_CM3.lib(rtx_memory.o)
    0x080004ee   0x080004ee   0x00000036   Code   RO         1928    .text.osRtxMemoryInit  RTX_CM3.lib(rtx_memory.o)
    0x08000524   0x08000524   0x0000004a   Code   RO         1947    .text.osRtxMemoryPoolAlloc  RTX_CM3.lib(rtx_mempool.o)
    0x0800056e   0x0800056e   0x00000056   Code   RO         1949    .text.osRtxMemoryPoolFree  RTX_CM3.lib(rtx_mempool.o)
    0x080005c4   0x080005c4   0x00000054   Code   RO         1945    .text.osRtxMemoryPoolInit  RTX_CM3.lib(rtx_mempool.o)
    0x08000618   0x08000618   0x00000044   Code   RO         1891    .text.osRtxMutexOwnerRelease  RTX_CM3.lib(rtx_mutex.o)
    0x0800065c   0x0800065c   0x00000090   Code   RO         2002    .text.osRtxPendSV_Handler  RTX_CM3.lib(rtx_system.o)
    0x080006ec   0x080006ec   0x00000038   Code   RO         1752    .text.osRtxThreadBlock  RTX_CM3.lib(rtx_thread.o)
    0x08000724   0x08000724   0x00000094   Code   RO         1760    .text.osRtxThreadDelayInsert  RTX_CM3.lib(rtx_thread.o)
    0x080007b8   0x080007b8   0x00000058   Code   RO         1756    .text.osRtxThreadDelayRemove  RTX_CM3.lib(rtx_thread.o)
    0x08000810   0x08000810   0x00000038   Code   RO         1742    .text.osRtxThreadDelayTick  RTX_CM3.lib(rtx_thread.o)
    0x08000848   0x08000848   0x00000060   Code   RO         1750    .text.osRtxThreadDispatch  RTX_CM3.lib(rtx_thread.o)
    0x080008a8   0x080008a8   0x00000058   Code   RO         1836    .text.osRtxThreadFree  RTX_CM3.lib(rtx_thread.o)
    0x08000900   0x08000900   0x00000016   Code   RO         1734    .text.osRtxThreadListGet  RTX_CM3.lib(rtx_thread.o)
    0x08000916   0x08000916   0x00000038   Code   RO         1732    .text.osRtxThreadListPut  RTX_CM3.lib(rtx_thread.o)
    0x0800094e   0x0800094e   0x00000014   Code   RO         1738    .text.osRtxThreadListRemove  RTX_CM3.lib(rtx_thread.o)
    0x08000962   0x08000962   0x0000002a   Code   RO         1808    .text.osRtxThreadPostProcess  RTX_CM3.lib(rtx_thread.o)
    0x0800098c   0x0800098c   0x00000014   Code   RO         1740    .text.osRtxThreadReadyPut  RTX_CM3.lib(rtx_thread.o)
    0x080009a0   0x080009a0   0x00000028   Code   RO         1748    .text.osRtxThreadStackCheck  RTX_CM3.lib(rtx_thread.o)
    0x080009c8   0x080009c8   0x00000058   Code   RO         1762    .text.osRtxThreadStartup  RTX_CM3.lib(rtx_thread.o)
    0x08000a20   0x08000a20   0x00000010   Code   RO         1746    .text.osRtxThreadSwitch  RTX_CM3.lib(rtx_thread.o)
    0x08000a30   0x08000a30   0x00000038   Code   RO         1758    .text.osRtxThreadWaitEnter  RTX_CM3.lib(rtx_thread.o)
    0x08000a68   0x08000a68   0x00000024   Code   RO         1754    .text.osRtxThreadWaitExit  RTX_CM3.lib(rtx_thread.o)
    0x08000a8c   0x08000a8c   0x00000070   Code   RO         2000    .text.osRtxTick_Handler  RTX_CM3.lib(rtx_system.o)
    0x08000afc   0x08000afc   0x0000000c   Code   RO         1792    .text.osThreadExit  RTX_CM3.lib(rtx_thread.o)
    0x08000b08   0x08000b08   0x00000024   Code   RO         1766    .text.osThreadNew   RTX_CM3.lib(rtx_thread.o)
    0x08000b2c   0x08000b2c   0x00000014   Code   RO         1871    .text.svcRtxDelay   RTX_CM3.lib(rtx_delay.o)
    0x08000b40   0x08000b40   0x00000178   Code   RO         1705    .text.svcRtxKernelInitialize  RTX_CM3.lib(rtx_kernel.o)
    0x08000cb8   0x08000cb8   0x0000008c   Code   RO         1707    .text.svcRtxKernelStart  RTX_CM3.lib(rtx_kernel.o)
    0x08000d44   0x08000d44   0x00000068   Code   RO         1840    .text.svcRtxThreadExit  RTX_CM3.lib(rtx_thread.o)
    0x08000dac   0x08000dac   0x000001e0   Code   RO         1764    .text.svcRtxThreadNew  RTX_CM3.lib(rtx_thread.o)
    0x08000f8c   0x08000f8c   0x0000003c   Code   RO          221    i.APP_Assert        app_f1.o
    0x08000fc8   0x08000fc8   0x0000012c   Code   RO          373    i.APP_BGet          app_bget.o
    0x080010f4   0x080010f4   0x00000014   Code   RO          374    i.APP_BGet_AllocSize  app_bget.o
    0x08001108   0x08001108   0x0000008c   Code   RO          375    i.APP_BGet_Init     app_bget.o
    0x08001194   0x08001194   0x00000014   Code   RO          376    i.APP_BGet_TotalSize  app_bget.o
    0x080011a8   0x080011a8   0x0000005c   Code   RO          378    i.APP_BGetz         app_bget.o
    0x08001204   0x08001204   0x00000044   Code   RO          638    i.APP_Debug_Init    app_debug.o
    0x08001248   0x08001248   0x00000084   Code   RO          639    i.APP_Debug_Poll    app_debug.o
    0x080012cc   0x080012cc   0x000000ec   Code   RO          431    i.APP_MessageQuene_In  app_ringbuffer.o
    0x080013b8   0x080013b8   0x00000026   Code   RO          432    i.APP_MessageQuene_Init  app_ringbuffer.o
    0x080013de   0x080013de   0x00000136   Code   RO          433    i.APP_MessageQuene_Out  app_ringbuffer.o
    0x08001514   0x08001514   0x00000048   Code   RO          222    i.APP_RunEnvInit    app_f1.o
    0x0800155c   0x0800155c   0x00000038   Code   RO          283    i.APP_SoftTimer_Create  app_softtimer.o
    0x08001594   0x08001594   0x0000003c   Code   RO          288    i.APP_SoftTimer_Init  app_softtimer.o
    0x080015d0   0x080015d0   0x00000024   Code   RO          291    i.APP_SoftTimer_Resume  app_softtimer.o
    0x080015f4   0x080015f4   0x00000070   Code   RO          292    i.APP_SoftTimer_TickHanlder  app_softtimer.o
    0x08001664   0x08001664   0x0000005c   Code   RO          707    i.BSP_LED_Init      bsp_led.o
    0x080016c0   0x080016c0   0x0000001c   Code   RO          710    i.BSP_LED_Toggle    bsp_led.o
    0x080016dc   0x080016dc   0x00000168   Code   RO          801    i.BSP_USART_Init    bsp_comf1.o
    0x08001844   0x08001844   0x00000040   Code   RO          802    i.BSP_USART_Putc    bsp_comf1.o
    0x08001884   0x08001884   0x00000060   Code   RO          804    i.BSP_USART_RecCallback  bsp_comf1.o
    0x080018e4   0x080018e4   0x00000018   Code   RO          805    i.BSP_USART_ReturnQue  bsp_comf1.o
    0x080018fc   0x080018fc   0x00000002   Code   RO          161    i.BusFault_Handler  stm32f10x_it.o
    0x080018fe   0x080018fe   0x00000002   PAD
    0x08001900   0x08001900   0x0000003c   Code   RO          640    i.CMD_MEMInfor      app_debug.o
    0x0800193c   0x0800193c   0x00000060   Code   RO          641    i.CMD_help          app_debug.o
    0x0800199c   0x0800199c   0x00000070   Code   RO          690    i.CmdLineProcess    app_cmdline.o
    0x08001a0c   0x08001a0c   0x00000014   Code   RO         1014    i.DMA_Cmd           stm32f10x_dma.o
    0x08001a20   0x08001a20   0x00000104   Code   RO         1015    i.DMA_DeInit        stm32f10x_dma.o
    0x08001b24   0x08001b24   0x00000052   Code   RO         1020    i.DMA_Init          stm32f10x_dma.o
    0x08001b76   0x08001b76   0x00000002   Code   RO          162    i.DebugMon_Handler  stm32f10x_it.o
    0x08001b78   0x08001b78   0x000000ae   Code   RO         1102    i.GPIO_Init         stm32f10x_gpio.o
    0x08001c26   0x08001c26   0x00000004   Code   RO         1109    i.GPIO_ResetBits    stm32f10x_gpio.o
    0x08001c2a   0x08001c2a   0x00000004   Code   RO         1110    i.GPIO_SetBits      stm32f10x_gpio.o
    0x08001c2e   0x08001c2e   0x00000002   Code   RO          163    i.HardFault_Handler  stm32f10x_it.o
    0x08001c30   0x08001c30   0x00000006   Code   RO            4    i.LEDTimer_Callback  main.o
    0x08001c36   0x08001c36   0x00000002   Code   RO          164    i.MemManage_Handler  stm32f10x_it.o
    0x08001c38   0x08001c38   0x00000002   Code   RO          165    i.NMI_Handler       stm32f10x_it.o
    0x08001c3a   0x08001c3a   0x00000002   PAD
    0x08001c3c   0x08001c3c   0x00000074   Code   RO          964    i.NVIC_Init         misc.o
    0x08001cb0   0x08001cb0   0x00000018   Code   RO         1223    i.RCC_AHBPeriphClockCmd  stm32f10x_rcc.o
    0x08001cc8   0x08001cc8   0x00000018   Code   RO         1224    i.RCC_APB1PeriphClockCmd  stm32f10x_rcc.o
    0x08001ce0   0x08001ce0   0x00000018   Code   RO         1225    i.RCC_APB1PeriphResetCmd  stm32f10x_rcc.o
    0x08001cf8   0x08001cf8   0x00000018   Code   RO         1226    i.RCC_APB2PeriphClockCmd  stm32f10x_rcc.o
    0x08001d10   0x08001d10   0x00000018   Code   RO         1227    i.RCC_APB2PeriphResetCmd  stm32f10x_rcc.o
    0x08001d28   0x08001d28   0x000000ac   Code   RO         1234    i.RCC_GetClocksFreq  stm32f10x_rcc.o
    0x08001dd4   0x08001dd4   0x00000004   Code   RO          225    i.SysTimer_Callback  app_f1.o
    0x08001dd8   0x08001dd8   0x00000070   Code   RO         1633    i.SystemCoreClockUpdate  system_stm32f10x.o
    0x08001e48   0x08001e48   0x000000f0   Code   RO         1634    i.SystemInit        system_stm32f10x.o
    0x08001f38   0x08001f38   0x00000040   Code   RO            5    i.SystemThread      main.o
    0x08001f78   0x08001f78   0x00000020   Code   RO          807    i.USART1_IRQHandler  bsp_comf1.o
    0x08001f98   0x08001f98   0x00000020   Code   RO          808    i.USART2_IRQHandler  bsp_comf1.o
    0x08001fb8   0x08001fb8   0x00000006   Code   RO         1434    i.USART_ClearFlag   stm32f10x_usart.o
    0x08001fbe   0x08001fbe   0x0000000e   Code   RO         1435    i.USART_ClearITPendingBit  stm32f10x_usart.o
    0x08001fcc   0x08001fcc   0x00000012   Code   RO         1438    i.USART_Cmd         stm32f10x_usart.o
    0x08001fde   0x08001fde   0x00000010   Code   RO         1439    i.USART_DMACmd      stm32f10x_usart.o
    0x08001fee   0x08001fee   0x000000a4   Code   RO         1440    i.USART_DeInit      stm32f10x_usart.o
    0x08002092   0x08002092   0x0000004c   Code   RO         1442    i.USART_GetITStatus  stm32f10x_usart.o
    0x080020de   0x080020de   0x00000030   Code   RO         1444    i.USART_ITConfig    stm32f10x_usart.o
    0x0800210e   0x0800210e   0x00000002   PAD
    0x08002110   0x08002110   0x000000b4   Code   RO         1445    i.USART_Init        stm32f10x_usart.o
    0x080021c4   0x080021c4   0x00000002   Code   RO          166    i.UsageFault_Handler  stm32f10x_it.o
    0x080021c6   0x080021c6   0x00000002   PAD
    0x080021c8   0x080021c8   0x00000020   Code   RO         2214    i.__0printf$6       mc_w.l(printf6.o)
    0x080021e8   0x080021e8   0x0000000e   Code   RO         2372    i.__scatterload_copy  mc_w.l(handlers.o)
    0x080021f6   0x080021f6   0x00000002   Code   RO         2373    i.__scatterload_null  mc_w.l(handlers.o)
    0x080021f8   0x080021f8   0x0000000e   Code   RO         2374    i.__scatterload_zeroinit  mc_w.l(handlers.o)
    0x08002206   0x08002206   0x00000002   PAD
    0x08002208   0x08002208   0x000002f0   Code   RO         2221    i._printf_core      mc_w.l(printf6.o)
    0x080024f8   0x080024f8   0x00000024   Code   RO         2222    i._printf_post_padding  mc_w.l(printf6.o)
    0x0800251c   0x0800251c   0x0000002e   Code   RO         2223    i._printf_pre_padding  mc_w.l(printf6.o)
    0x0800254a   0x0800254a   0x00000002   PAD
    0x0800254c   0x0800254c   0x00000084   Code   RO          380    i.bpool             app_bget.o
    0x080025d0   0x080025d0   0x0000001c   Code   RO          226    i.fputc             app_f1.o
    0x080025ec   0x080025ec   0x00000020   Code   RO            6    i.main              main.o
    0x0800260c   0x0800260c   0x00000002   Code   RO          930    i.osRtxErrorNotify  rtx_config.o
    0x0800260e   0x0800260e   0x00000002   Code   RO          931    i.osRtxIdleThread   rtx_config.o
    0x08002610   0x08002610   0x00000002   Code   RO          879    i.osRtxTimerThread  rtx_lib.o
    0x08002612   0x08002612   0x00000002   PAD
    0x08002614   0x08002614   0x00000024   Data   RO            7    .constdata          main.o
    0x08002638   0x08002638   0x00000024   Data   RO          886    .constdata          rtx_lib.o
    0x0800265c   0x0800265c   0x00000004   Data   RO          887    .constdata          rtx_lib.o
    0x08002660   0x08002660   0x00000045   Data   RO          642    .conststring        app_debug.o
    0x080026a5   0x080026a5   0x00000003   PAD
    0x080026a8   0x080026a8   0x00000068   Data   RO          890    .rodata             rtx_lib.o
    0x08002710   0x08002710   0x0000000b   Data   RO         1719    .rodata.str1.4      RTX_CM3.lib(rtx_kernel.o)
    0x0800271b   0x0800271b   0x00000001   PAD
    0x0800271c   0x0800271c   0x00000020   Data   RO         2370    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Exec base: 0x20000000, Load base: 0x0800273c, Size: 0x00002420, Max: 0x00005000, ABSOLUTE, COMPRESSED[0x000000c0])

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   COMPRESSED   0x00001000   Data   RW          880    .bss.os             rtx_lib.o
    0x20001000   COMPRESSED   0x00000040   Data   RW          881    .bss.os             rtx_lib.o
    0x20001040   COMPRESSED   0x00000044   Data   RW          882    .bss.os.thread.cb   rtx_lib.o
    0x20001084   COMPRESSED   0x00000044   Data   RW          883    .bss.os.thread.cb   rtx_lib.o
    0x200010c8   COMPRESSED   0x00000818   Data   RW          884    .bss.os.thread.stack  rtx_lib.o
    0x200018e0   COMPRESSED   0x00000100   Data   RW          885    .bss.os.thread.stack  rtx_lib.o
    0x200019e0   COMPRESSED   0x00000008   Data   RW          294    .data               app_softtimer.o
    0x200019e8   COMPRESSED   0x00000028   Data   RW          382    .data               app_bget.o
    0x20001a10   COMPRESSED   0x00000028   Data   RW          643    .data               app_debug.o
    0x20001a38   COMPRESSED   0x00000014   Data   RW          711    .data               bsp_led.o
    0x20001a4c   COMPRESSED   0x00000098   Data   RW          809    .data               bsp_comf1.o
    0x20001ae4   COMPRESSED   0x00000014   Data   RW         1254    .data               stm32f10x_rcc.o
    0x20001af8   COMPRESSED   0x00000014   Data   RW         1635    .data               system_stm32f10x.o
    0x20001b0c   COMPRESSED   0x00000004   Data   RW         2342    .data               mc_w.l(stdout.o)
    0x20001b10   COMPRESSED   0x000000a4   Data   RW         1720    .data.os            RTX_CM3.lib(rtx_kernel.o)
    0x20001bb4   COMPRESSED   0x00000018   Data   RW          889    .data.os.thread.mpi  rtx_lib.o
    0x20001bcc        -       0x00000028   Zero   RW          293    .bss                app_softtimer.o
    0x20001bf4        -       0x00000400   Zero   RW          381    .bss                app_bget.o
    0x20001ff4        -       0x00000024   Zero   RW          691    .bss                app_cmdline.o
    0x20002018        -       0x00000001   Zero   RW         2035    .bss.PendST         RTX_CM3.lib(os_systick.o)
    0x20002019   COMPRESSED   0x00000007   PAD
    0x20002020        -       0x00000400   Zero   RW         1623    STACK               startup_stm32f10x_md.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       704        120          0         40       1024       5377   app_bget.o
       112         10          0          0         36       1489   app_cmdline.o
       356        186         69         40          0       4451   app_debug.o
       164         56          0          0          0      27113   app_f1.o
       584          0          0          0          0       6817   app_ringbuffer.o
       264         24          0          8         40       3750   app_softtimer.o
       608         38          0        152          0       4573   bsp_comf1.o
       120         12          0         20          0       1845   bsp_led.o
       102         12         36          0          0     254263   main.o
       116          4          0          0          0       1348   misc.o
         4          0          0          0          0        897   rtx_config.o
         2          0        144       6648          0      12706   rtx_lib.o
        36          8        236          0       1024        808   startup_stm32f10x_md.o
       362         54          0          0          0       4062   stm32f10x_dma.o
       182          0          0          0          0       3428   stm32f10x_gpio.o
        12          0          0          0          0       2361   stm32f10x_it.o
       292         50          0         20          0       6956   stm32f10x_rcc.o
       522          6          0          0          0       7632   stm32f10x_usart.o
       352         40          0         20          0       2241   system_stm32f10x.o

    ----------------------------------------------------------------------
      4904        620        520       6948       2124     352117   Object Totals
         0          0         32          0          0          0   (incl. Generated)
        10          0          3          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

       148         10          0          0          0        488   irq_cm3.o
       126         32          0          0          1       3575   os_systick.o
        56          4          0          0          0       3088   rtx_delay.o
       588         36         11        164          0      18714   rtx_kernel.o
       264          0          0          0          0       2707   rtx_memory.o
       244          0          0          0          0      15835   rtx_mempool.o
        68          0          0          0          0      10258   rtx_mutex.o
       256         16          0          0          0       5544   rtx_system.o
      1666         92          0          0          0      33794   rtx_thread.o
        86          0          0          0          0          0   __dczerorl2.o
         0          0          0          0          0          0   entry.o
         0          0          0          0          0          0   entry10a.o
         0          0          0          0          0          0   entry11a.o
         8          4          0          0          0          0   entry2.o
         4          0          0          0          0          0   entry5.o
         0          0          0          0          0          0   entry7b.o
         0          0          0          0          0          0   entry8b.o
         8          4          0          0          0          0   entry9a.o
        30          0          0          0          0          0   handlers.o
        36          8          0          0          0         68   init.o
        36          0          0          0          0         68   memcpya.o
        36          0          0          0          0        108   memseta.o
       866         14          0          0          0        352   printf6.o
         0          0          0          4          0          0   stdout.o
        28          0          0          0          0         76   strcmp.o
        44          0          0          0          0         80   uidiv.o

    ----------------------------------------------------------------------
      4608        220         12        168          8      94755   Library Totals
        10          0          1          0          7          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      3416        190         11        164          1      94003   RTX_CM3.lib
      1182         30          0          4          0        752   mc_w.l

    ----------------------------------------------------------------------
      4608        220         12        168          8      94755   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

      9512        840        532       7116       2132     443456   Grand Totals
      9512        840        532        192       2132     443456   ELF Image Totals (compressed)
      9512        840        532        192          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                10044 (   9.81kB)
    Total RW  Size (RW Data + ZI Data)              9248 (   9.03kB)
    Total ROM Size (Code + RO Data + RW Data)      10236 (  10.00kB)

==============================================================================

